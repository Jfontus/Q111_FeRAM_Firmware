
                                                              Page :          1
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

      1 //*********************************************************************
        ********
      2 //
      3 // USDC TEMPLATE FIRMWARE for Q111 MCU  
      4 //
      5 // Program:	 LAPIS FeRAM Development Board Demo Code 
      6 //
      7 // Purpose:	 Demonstration Code for use with LAPIS MCU Development Boar
        d 
      8 //
      9 // This single Example code Demonstrates all the following modules work
        ing: 
     10 //		 1.) MCU Initialization (OSC; PORTS; PERIPHERIALS; WDT; etc.) 
     11 //		 2.) Demo of 2Hz INTERRUPT on TBC
     12 //		 3.) Demo of Timer-overflow INTERRUPTS on TMR 8/9
     13 //		 4.) Demo of Timer-overflow INTERRUPTS on TMR A/B
     14 //		 5.) Demo of Timer-overflow INTERRUPTS on TMR E/F
     15 //		 6.) Demo of Hardware PWM Control 
     16 //		 7.) UART TX Demo 
     17 //		 8.) UART RX Demo
     18 //		 9.) ADC Demo...
     19 //		10.) IsC Master Demo...    
     20 //
     21 // Authors:	 C. Schell, K. Bahar, F. Lee, & J. Fontus
     22 //		 	 ROHM Semiconductor USA, LLC
     23 //		 	 US Design Center
     24 //
     25 // Notes: 	
     26 //		1.) RTLU8 RUNTIME LIBRARIES:
     27 //				RTLU8 is a C runtime library for mcu's that use the LAPIS nX-U8 a
        s the CPU core
     28 //				RTLU8 provides a large number of routines that can be used when p
        rogramming 
     29 //				in C. Much effort and time can be saved by using these library ro
        utines.
     30 //				For Example, to use the sprintf library for UART commands, you ne
        ed to add 
     31 //				the "LU8100SW.lib" RT Library. To do this open the LAPIS IDE & se
        lect:
     32 //				'Project -> Options -> Target' from the menu bar.  In the "Genera
        l" Tab, 
     33 //				type in "LU8100SW.lib" to add the RTLU8 runtime library for small
         memory 
     34 //				model containing sprintf and many other routines
     35 //		2.) CHECKING THE PROGRAM SIZE:
     36 //				You can check the program size from the map file generated during

                                                              Page :          2
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

         "Compile" step by the Linker. 
     37 //				Please refer to CCU8 programming guide: (3.1. Map Files and 3.1.4
        . Program and Data size)
     38 //				Results will look something like this:
     39 //					Program and Data Sizes
     40 //					This portion of the map file gives aggregate program and data si
        zes for each segment type.
     41 //						Total size (CODE  ) = 02CE4   (11492)
     42 //						Total size (DATA  ) = 002E7   (743)
     43 //						Total size (BIT   ) = 00000.0 (0.0)
     44 //						Total size (NVDATA) = 00000   (0)
     45 //						Total size (NVBIT ) = 00000.0 (0.0)
     46 //						Total size (TABLE ) = 0828A   (33418)
     47 //
     48 // Started:  April 6th, 2013
     49 // Updated:	 JULY 24th, 2014
     50 //*********************************************************************
        ********
     51 
     52 // ================================ ML610Q111 =========================
        ======== 
     53 //	ML610Q111 MCU PINOUT - TSSOP20 Package
     54 //
     55 // 		Pin 01 of mcu => PC0 / TM9OUT / PWMF0 
     56 // 		Pin 02 of mcu => RESET_N
     57 // 		Pin 03 of mcu => TEST
     58 // 		Pin 04 of mcu => PB0 / CMP1OUT / OUTCLK / PWMC / RXD0 / AIN2 / EXI
        4
     59 // 		Pin 05 of mcu => PB1 / TXD1 / TXD0 / PWMD / AIN3 / EXI5 
     60 // 		Pin 06 of mcu => PB2 / PWME / RXD1 / EXI6 
     61 // 		Pin 07 of mcu => PB3 / TXD1 / SIN / EXI7 
     62 // 		Pin 08 of mcu => PA2 / CMP0OUT / CLKIN / PWME / EXI2 
     63 // 		Pin 09 of mcu => TESTF
     64 // 		Pin 10 of mcu => PC3 / TMFOUT
     65 
     66 // 		Pin 11 of mcu => PC2 / PWMF2 
     67 // 		Pin 12 of mcu => PA1 / EXI1 / AIN1 / CMP1P / PWMD / LSCLK / TMFOUT
        
     68 // 		Pin 13 of mcu => PB4 / CMP0P / SOUT / TXD0 / TXD1
     69 // 		Pin 14 of mcu => PB5 / CMP0M / RXD0 / SCK / SCL / PWMF2
     70 // 		Pin 15 of mcu => PB6 / AIN4 / CLKIN / SDA / PWMF1
     71 // 		Pin 16 of mcu => VSS
     72 // 		Pin 17 of mcu => VDD
     73 // 		Pin 18 of mcu => PB7 / AIN5 / RXD1 / LSCLK / PWMF0 / PWMC
     74 // 		Pin 19 of mcu => PA0 / EXI0 / AIN0 / PWMC / OUTCLK / TM9OUT
     75 // 		Pin 20 of mcu => PC1 / PWMF1

                                                              Page :          3
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

     76 //
     77 //=====================================================================
        ========
     78 
     79 //*********************************************************************
        ********
     80 // Microcontroller's connections on the LAPIS MCU Development Board to 
        the 
     81 //  Plug 'n Play, Raspberry Pi Compatible, Universal Connectors:
     82 //
     83 // Pin-01 => 3.3V Power					Pin-02 => 5.0V Power (VBUS)
     84 // Pin-03 => I2C-SDA  (Q111 I/O B.6)	Pin-04 => no connection
     85 // Pin-05 => I2C-SCL  (Q111 I/O B.5)*	Pin-06 => GROUND
     86 // Pin-07 => no connection*				Pin-08 => UART-TX  (Q111 I/O B.1)
     87 // Pin-09 => no connection				Pin-10 => UART-RX  (Q111 I/O B.0) 
     88 // Pin-11 => GPIO #17 (Q111 I/O A.0)	Pin-12 => GPIO #18 (Q111 I/O B.7)
     89 // Pin-13 => GPIO #21 (Q111 I/O A.1)	Pin-14 => no connection
     90 // Pin-15 => GPIO #22 (Q111 I/O A.2)	Pin-16 => GPIO #23 (Q111 I/O C.2)
     91 // Pin-17 => no connection				Pin-18 => GPIO #24 (Q111 I/O C.3)
     92 // Pin-19 => SPI-MOSI (Q111 I/O B.4)	Pin-20 => no connection
     93 // Pin-21 => SPI-MISO (Q111 I/O B.3)	Pin-22 => GPIO #25 (Q111 I/O B.2)
     94 // Pin-23 => SPI-SCLK (Q111 I/O B.5)*	Pin-24 => SPI-CS0  (Q111 I/O C.0)
        
     95 // Pin-25 => no connection				Pin-26 => SPI-CS1  (Q111 I/O C.1)
     96 // 
     97 //=====================================================================
        ========
     98 //*********************************************************************
        ********
     99 
    100 //*********************************************************************
        ********
    101 // Q111 Microcontroller's I/O Pins at J3 on the LAPIS MCU Development B
        oard 
    102 //
    103 // Pin-01 => A.0				Pin-02 => A.1
    104 // Pin-03 => A.2				Pin-04 => B.0
    105 // Pin-05 => B.1				Pin-06 => B.2
    106 // Pin-07 => B.3				Pin-08 => B.4
    107 // Pin-09 => B.5				Pin-10 => B.6 
    108 // Pin-11 => B.7				Pin-12 => C.0
    109 // Pin-13 => C.1				Pin-14 => C.2
    110 // Pin-15 => C.3				Pin-16 => GROUND
    111 //
    112 //=====================================================================
        ========

                                                              Page :          4
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    113 //*********************************************************************
        ********
    114 
    115 
    116 //***** PREPROCESSOR DIRECTIVES ***************************************
        ********
    117  // INCLUDED FILES...
    118 	#include	<ML610111.H>	// Lapis Micro ML610Q111 on LAPIS MCU Developmen
        t Board
    119 	#include	<stdlib.h>		// General-purpose utilities
    120 	#include	<stdio.h>		// I/O-related processing
    121 	#include 	<common.h>		// Common Definitions
    122 	#include 	<irq.h>			// IRQ Definitions
    123 	#include 	<mcu.h>			// MCU Definition
    124 	#include	<i2c.h>			// I2C Definition
    125 	#include 	<tbc.h>			// Set TBC (Timer Based Clock) API
    126 	#include 	<timer.h>		// Timer Macros & APIs
    127 	#include	<math.h>		// Mathematical functions
    128 	#include 	<uart.h>		// UART Function Prototypes
    129 	#include	<feram_i2c.h>	// FeRAM Function Prototypes
***** main\feram_i2c.h(101) : Warning : W5027 : Meaningless use of an expressio
        n
    130 	//#include	<float.h>		// Numerical limits for floating-point numbers	
    131 	//#include	<string.h>		// Character string manipulation routines
    132 	//#include	<yvals.h>		// Called for by most Header Files
    133 
    134 	//#include 	<main.h>		// Clear WDT API
    135 	//#include	<ctype.h>		// Character classification and conversion 
    136 	//#include	<errno.h>		// Error identifiers Library
    137 	//#include	<limits.h>		// Numerical limits for integers
    138 	//#include	<muldivu8.h>	// Multiplication and Division accelerator
    139 	//#include	<setjmp.h>		// Global jump (allow jumps to locations outsid
        e the current function) 
    140 	//#include	<signal.h>		// Signal handling functions
    141 	//#include	<stdarg.h>		// Variable numbers of arguments
    142 	//#include	<stddef.h>		// Standard types and macros 
    143 	//#include	<yfuns.h>		//  
    144 	
    145 //*********************************************************************
        ********
    146  // I/O PIN DATA ALIASES...
    147 // Connections for Q111 Universal Socket
    148 	#define RX 			PB0D 
    149 	#define TX 			PB1D
    150  
    151 	#define I2C_SDA 	PB6D 

                                                              Page :          5
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    152 	#define I2C_SCL 	PB5D 
    153 
    154 	#define GPIO_17		PA0D
    155 	#define GPIO_21		PA1D
    156 	#define GPIO_22		PA2D
    157 	#define GPIO_18		PB7D
    158 	#define GPIO_23		PC2D
    159 	#define GPIO_24		PC3D
    160 	#define GPIO_25		PB2D
    161 
    162 	#define SPI_MOSI	PB4D
    163 	#define SPI_MISO	PB3D
    164 	#define SPI_SCL 	PB5D
    165 	#define SPI_CS0		PC0D
    166 	#define SPI_CS1 	PC1D 	
    167 	
    168 	
    169 
    170 //*********************************************************************
        ********
    171 //=====================================================================
        ======
    172 //   MACROS: 
    173 //=====================================================================
        ======
    174 
    175 // ===== Peripheral setting.=====
    176 	#define HSCLK_KHZ	( 8192u )	// 8MHz = 8000kHz (will be multiplied by 1
        024 to give 8,192,000Hz)
    177 	#define FLG_SET	    ( 0x01u ) 	
    178 
    179 // ===== SET DESIRED UART SETTINGS HERE! (Options in UART.h) ==========
        ======
    180 #define UART_BAUDRATE		( UART_BR_9600BPS) 	// Data Bits Per Second - Te
        sted at rates from 2400bps to 512000bps!
    181 #define UART_DATA_LENGTH	( UART_LG_8BIT )		// x-Bit Data
    182 #define UART_PARITY_BIT		( UART_PT_NON )			// Parity
    183 #define UART_STOP_BIT		( UART_STP_1BIT )		// x Stop-Bits
    184 #define UART_LOGIC			( UART_NEG_POS )		// Desired Logic
    185 #define UART_DIRECTION		( UART_DIR_LSB )		// LSB or MSB First 
    186 
    187 		// ===== UART Settings =====
    188 		//STRUCTURE:
    189 			static const tUartSetParam  _uartSetParam = {		// UART Parameters
    190 				UART_BAUDRATE,						// Members of Structure...
    191 				UART_DATA_LENGTH,					// Members of Structure...

                                                              Page :          6
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    192 				UART_PARITY_BIT,					// Members of Structure...
    193 				UART_STOP_BIT,						// Members of Structure...
    194 				UART_LOGIC,							// Members of Structure...
    195 				UART_DIRECTION						// Members of Structure...
    196 			};
    197 //=====================================================================
        ======
    198 
    199 
    200 
    201 //*********************************************************************
        ********
    202 //=====================================================================
        ======
    203 //   STRUCTURES: 
    204 //=====================================================================
        ======
    205 	//Example Structure Declaration
    206 	typedef struct {
    207 		unsigned char state     : 1;
    208 		unsigned char state_sub : 2;
    209 		unsigned char reserve   : 5;
    210 	} STRUCT_STATE;	 
    211 
    212 
    213 //*********************************************************************
        ********
    214 
    215 
    216 //*********************************************************************
        ********
    217 //=====================================================================
        ======
    218 //   FUNCTION PROTOTYPES: 
    219 //	Establishes the name and return type of a function and may specify t
        he 
    220 // 	types, formal parameter names and number of arguments to the functi
        on                                 
    221 //=====================================================================
        ======
    222 	void main_clrWDT( void );				// no return value and no arguments
    223 	void Initialization( void );			// no return value and no arguments
    224 	void SetOSC( void );					// no return value and no arguments
    225 
    226 	static void NOPms(unsigned int ms);		// no return value - Delay in ms 
        as Argument

                                                              Page :          7
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    227 	void NOPx( unsigned int MyCount );		// no return value - Count in ms a
        s Argument
    228 	void PWM_B0_ON(int myPeriod, int myDutyCycle);		// no return value - P
        eriod & DutyCycle Variables as Arguments
    229 
    230 	void analog_comparator( void );			
    231 	void PortA_Low( void );					// no return value and no arguments
    232 	void PortB_Low( void );					// no return value and no arguments
    233 	void PortC_Low( void );					// no return value and no arguments
    234 	void PortA_Digital_Inputs( void );		// no return value and no argument
        s
    235 	void PinB0_PWM( void ); 				// no return value and no arguments
    236 	void main_reqNotHalt( void );			// no return value and no arguments
    237 
    238 	static void _initPeri( void );
    239 	static void _intWdt( void );
    240 	static void _intTimer( void );
    241 
    242 	void _funcUartFin( unsigned int size, unsigned char errStat );
    243 	void _intUart( void );
    244 
    245 	void _funcI2CFin( unsigned int size, unsigned char errStat );
    246 	void checkI2C( void );
    247 	void _intI2c( void );
    248 
    249 	void _intADC( void );
    250 	
    251 	void TBC_ISR( void );			// TBC Interrupt Service Routine...
    252 	void TMR89_ISR( void );			// TIMER 8/9 Interrupt Service Routine...
    253 	void TMRAB_ISR( void );			// TIMER A/B Interrupt Service Routine...
    254 	void TMREF_ISR( void );			// TIMER E/F Interrupt Service Routine...
    255 	void ExtInt_ISR( void );		// External Interrupt Interrupt Service Rout
        ine...
    256 	
    257 	void SerialLCD_Init_and_Clear (void);	// no return value and no argume
        nts 
    258 
    259 	void UART_TX_TEST (void);				// no return value and no arguments
    260 	void UART_RX_TEST (void);				// no return value and no arguments
    261 
    262 	void Jerrys_Function (void);
    263 
    264 //*********************************************************************
        ********
    265 //GLOBALS...
    266 

                                                              Page :          8
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    267 	//UART, I2C & ADC Variables
    268 	unsigned char	_flgUartFin;
    269 	unsigned char 	_flgI2CFin;
    270 	unsigned char	_flgADCFin;
    271 	unsigned char	_reqNotHalt;
    272 	
    273 
    274 /*######################################50#############################
        #########*/
    275 /*#                                  APIs                              
              #*/
    276 /*#####################################################################
        #######*/
    277 //*********************************************************************
        ********
    278 //=====================================================================
        ======
    279 //  	Start of MAIN FUNCTION
    280 //=====================================================================
        ======
    281 int main(void) 
    282 {
    283 	//LOCAL VARIABLES
    284 	char char_a;				// -128 to 127
    285 	unsigned char uchar;		// 0-255
    286 	unsigned int uint, delay;	// 0 to 65,535
    287 	long long_a;				// -2,147,483,648 to 2,147,483,647
    288 	float float_a;				// 1.17549435e-38 to 3.40282347e+38
    289 	double double_a;			// 2.2250738585072014e-308 to 1.7976931348623157e+3
        08 
    290 	int i,j,k,x,y;				// -32,768 to 32767
    291 	unsigned char *holder;		//holds address
    292 	
    293 	//uint = 0xFF;				// data value
    294 	//holder = &uint;				// holds the address of inputting data
    295 	
    296 
    297 	Init:
    298 		Initialization();		// Init Micro...(Ports, Timers, OSC, IRQ's, UART, 
        etc...)
    299 		feram_init();			// Intialize setting for FeRAM
    300 		i = feram_write(0x00, 0xFF, 1);
***** main\main.c(300) : Warning : W5002 : 'argument' : different levels of ind
        irection
    301 		j = feram_read(0x00, 0xFF, 1);
***** main\main.c(301) : Warning : W5002 : 'argument' : different levels of ind

                                                              Page :          9
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

        irection
    302 		k = feram_continue();
    303 		x = feram_stop();
***** main\main.c(303) : Warning : W5003 : Atleast one void operand
    304 		y = feram_getStatus();
    305 		
    306 		
    307 	Primary_Loop:		
    308 		//PLACE USER CODE HERE...
    309 		//PWM_B0_ON(4000, 125);	//period, Duty Cycle variables
    310 
    311 		//Heartbeat_LED_pin ^= 1;
    312 		GPIO_17 ^=1; 
    313 		main_clrWDT();
    314 		NOPx(65000);
***** main\main.c(314) : Warning : W5013 : Parameter mismatch, actual parameter
         converted
    315 		NOPx(65000);
***** main\main.c(315) : Warning : W5013 : Parameter mismatch, actual parameter
         converted
    316 
    317 	goto Primary_Loop;
    318 		
    319 
    320 }//end main
    321 
    322 //=====================================================================
        ======
    323 //  	End of MAIN FUNCTION
    324 //=====================================================================
        ======
    325 //*********************************************************************
        ********
    326 
    327 
    328 
    329 
    330 //*********************************************************************
        ********
    331 //=====================================================================
        ======
    332 //  	Start of Other Functions...
    333 //=====================================================================
        ======
    334 //*********************************************************************
        ********

                                                              Page :         10
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    335 
    336 
    337 /**********************************************************************
        *********
    338 	Routine Name:	main_clrWDT
    339 	Form:			void main_clrWDT( void )
    340 	Parameters:		void
    341 	Return value:	void
    342 	Description:	clear WDT.
    343 ***********************************************************************
        *******/
    344 
    345 void main_clrWDT( void )
***** main\main.c(320) : Warning : W5029 : 'holder': unreferenced local variabl
        e
***** main\main.c(320) : Warning : W5029 : 'double_a': unreferenced local varia
        ble
***** main\main.c(320) : Warning : W5029 : 'float_a': unreferenced local variab
        le
***** main\main.c(320) : Warning : W5029 : 'long_a': unreferenced local variabl
        e
***** main\main.c(320) : Warning : W5029 : 'delay': unreferenced local variable
***** main\main.c(320) : Warning : W5029 : 'uint': unreferenced local variable
***** main\main.c(320) : Warning : W5029 : 'uchar': unreferenced local variable
***** main\main.c(320) : Warning : W5029 : 'char_a': unreferenced local variabl
        e
***** main\main.c(320) : Warning : W6002 : 'Init': unreferenced label
    346 {
    347 	//__DI(); // Disable multi-interrupts
    348 		do {
    349 			WDTCON = 0x5Au;
    350 		} while (WDP != 1);
    351 		WDTCON = 0xA5u;
    352 
    353 	//__EI(); // Re-Enable multi-interrupts
    354 }
    355 
    356 //=====================================================================
        ======
    357 //	Initialize Micro to Desired State...
    358 //=====================================================================
        ======
    359 static void Initialization(void){
    360 
    361 	//Initialize Peripherals	
    362 		//BLKCON2 Control Bits...Manually Set 4/12/2013

                                                              Page :         11
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    363 			DSIO0 = 1; // 0=> Enables Synchronous Serial Port 0 
    364 			DUA0  = 0; // 0=> Enables the operation of UART0 
    365 			DUA1  = 1; // 0=> Enables Uart1 
    366 			DI2C1 = 1; // 0=> Enables I2C bus Interface (Slave) 
    367 			DI2C0 = 0; // 0=> Enables I2C bus Interface (Master)	
    368 	
    369 		BLKCON4 = 0x00; // SA-ADC: 0=> Enables ; 0xFF=> Disables
    370 		BLKCON6 = 0x00; // Timers 8, 9, A, E, F : 0=> Enables ; 0xFF=> Disabl
        es
    371 		BLKCON7 = 0x00; // PWM (PWMC, PWMD, PWME, PWMF : 0=> Enables ; 0xFF=>
         Disables
    372 
    373 	// Port Initialize...
    374 		PortA_Low();	//Initialize all 3 Ports of Q111 Port A to GPIO-Low
    375 		PortB_Low();	//Initialize all 8 Ports of Q111 Port B to GPIO-Low
    376 		PortC_Low();	//Initialize all 4 Ports of Q111 Port C to GPIO-Low
    377 
    378 	// UART INIT...	
    379 		//uart_0_Init();
    380 				
    381 				
    382 	// ===== Set Oscillator Rate =====
    383      	SetOSC(); 	//8MHz
    384 
    385 	// ===== PWM =========================================================
        =======
    386 	//
    387 	//	NOTE: Possible conflict of B.0 with RX pin from UART0
    388 	//	
    389 	//	PinB0_PWM();		// Set up PWM peripheral (Pin on B.0)
    390 	//====================================================================
        =======	
    391 		
    392 	// ===== Comparator =====	
    393 		//analog_comparator();	//Set up anaolg comparator peripheral
    394 
    395 
    396 /* 	// ===== SET SPECIFIC DESIRED PINS AS INPUTS =====
    397 		//Setup PIR Sensor Input on B.4
    398 			//Step 1: Set Pin Direction...
    399 				PB4DIR = 1;			// PortB Bit4 set Direction to INPUT...
    400 			//Step 2: Set Pin I/O Type...
    401 				PB4C1  = 0;			// PortB Bit4 set Type to HIGH-IMPEDANCE INPUT...
    402 				PB4C0  = 0;	
    403 			//Step 3: Set Pin Purpose...
    404 				PB4MD1  = 0;		// PortB Bit4 set Purpose to GENERAL PURPOSE Input/Ou

                                                              Page :         12
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

        tput...
    405 				PB4MD0  = 0;
    406 
    407 		//Setup HALL Sensor Input on B.3
    408 			//Step 1: Set Pin Direction...
    409 				PB3DIR = 1;			// PortB Bit3 set Direction to INPUT...
    410 			//Step 2: Set Pin I/O Type...
    411 				PB3C1  = 0;			// PortB Bit3 set Type to HIGH-IMPEDANCE INPUT...
    412 				PB3C0  = 0;	
    413 			//Step 3: Set Pin Purpose...
    414 				PB3MD1  = 0;		// PortB Bit3 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    415 				PB3MD0  = 0;
    416 
    417 		//Setup ACCELEROMETER X-SIGNAL Sensor Input on A.2
    418 			//Step 1: Set Pin Direction...
    419 				PA2DIR = 1;			// PortA Bit2 set Direction to INPUT...
    420 			//Step 2: Set Pin I/O Type...
    421 				PA2C1  = 0;			// PortA Bit2 set Type to HIGH-IMPEDANCE INPUT...
    422 				PA2C0  = 0;	
    423 			//Step 3: Set Pin Purpose...
    424 				PA2MD1  = 0;		// PortA Bit2 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    425 				PA2MD0  = 0;
    426 		
    427 		//Setup ACCELEROMETER Y-SIGNAL Sensor Input on A.1
    428 			//Step 1: Set Pin Direction...
    429 				PA1DIR = 1;			// PortA Bit1 set Direction to INPUT...
    430 			//Step 2: Set Pin I/O Type...
    431 				PA1C1  = 0;			// PortA Bit1 set Type to HIGH-IMPEDANCE INPUT...
    432 				PA1C0  = 0;	
    433 			//Step 3: Set Pin Purpose...
    434 				PA1MD1  = 0;		// PortA Bit1 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    435 				PA1MD0  = 0;
    436 
    437 		//Setup ACCELEROMETER Temperature-SIGNAL Sensor Input on A.0
    438 			//Step 1: Set Pin Direction...
    439 				PA0DIR = 1;			// PortA Bit0 set Direction to INPUT...
    440 			//Step 2: Set Pin I/O Type...
    441 				PA0C1  = 0;			// PortA Bit0 set Type to HIGH-IMPEDANCE INPUT...
    442 				PA0C0  = 0;	
    443 			//Step 3: Set Pin Purpose...
    444 				PA0MD1  = 0;		// PortA Bit0 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    445 				PA0MD0  = 0; */

                                                              Page :         13
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    446 
    447 	//================== STANDBY CONTROL REGISTER=========================
        ==========
    448 	//
    449 	// SBYCON is a 2-bit special function register to control operating mo
        de of MCU
    450 	//		STP   :   HLT
    451 	// 		BIT 1 :  BIT 0
    452 	//  	 0         0     => Program RUN mode (initial value)
    453 	//  	 0         1     => HALT mode
    454 	//  	 1         0     => STOP mode
    455 	//  	 1         1     => (Prohibited)
    456 	// See ML610Q111/ML610Q112 User Manual - Section 4: MCU Control Functi
        on
    457 	//	SBYCON = 0;		// Program RUN mode
    458 	//====================================================================
        ==========
    459 
    460 	//================== VOLTAGE LEVEL SUPERVISOR REGISTER ===============
        ==========
    461 	// 
    462 	// The Q11x mcu's have two channels of VOLTAGE LEVEL SUPERVISORs
    463 	// Accuracy is ±3%
    464 	//
    465 	// The threshold voltages of VLS0 (VDD fall) : 2.85V (Typ. )
    466 	//								  (VDD rise) : 2.92V (Typ. )
    467 	//
    468 	// The threshold voltages of VLS1 (VDD fall) : 4 types selectable 3.3V
        / 3.6V/ 3.9V/ 4.2V (Typ.)
    469 	// The VLS0 can be used as the low voltage level detector reset.
    470 	// 
    471 	// See ML610Q111/ML610Q112 User Manual - Section 22: Voltage Level Sup
        ervisor
    472 	//
    473 	//====================================================================
        ==========
    474 
    475    	// IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII
    476 	// INTERRUPT SETUP...
    477 		//	The ML610Q1xx mcu's have 31 hardware interrupt sources 
    478 		//		 7 External Interrupt Sources
    479 		//		24 Internal Interrupt Sources 
    480 		// EXAMPLE: WDT; VLS; EXTERNAL INT Pins (6); SPI; ADC; I2C (Slave); I
        2C (Master);
    481 		//			TIMERS (6); UART; Comparators (2); PWM's ((4); TBC (4)		
    482 	

                                                              Page :         14
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    483 		irq_di();	// Disable Interrupts
    484 		//irq_init();	// Initialize Interrupts (All Off and NO Requests)
    485 			//==================================================================
        ==
    486 			//FOR NOTES ONLY...This is all taken care of in "irq_init()"
    487 				// INTERRUPT ENABLE REGISTERS...
    488 				//  IE0 = VOLTAGE LEVEL SUPERVISOR Int.
    489 				//  IE1 = EXTERNAL Ints on B3, B2, B1, B0, A2, A1, & A0
    490 				//  IE2 = SPI, A/D, I2C Slave & I2C Master Int.
    491 				//  IE3 = TIMERS 8 & 9 Ints.
    492 				//  IE4 = UART & COMPARATOR Ints.
    493 				//  IE5 = TIMERS A, B, E & F Ints.
    494 				//  IE6 = PWMC, PWMD, PWME, PWMF & 128Hz & 32Hz TBC Ints.
    495 				//  IE7 = 16Hz & 2Hz TBC Ints.
    496 				//IE0 = IE1 = IE2 = IE3 = IE4 = IE5 = IE6 = IE7 = 0;
    497 				//--------------------------------------------------------------
    498 				// INTERRUPT REQUEST FLAG REGISTERS...
    499 				//  IRQ0 = WDT & VLS Int Requests
    500 				//  IRQ1 = EXTERNAL Int Requests
    501 				//  IRQ2 = SPI, A/D, I2C Slave & I2C Master Int Requests
    502 				//  IRQ3 = TIMERS 8 & 9 Int Requests 
    503 				//  IRQ4 = UART & COMPARATOR Int Requests 
    504 				//  IRQ5 = TIMERS A, B, E & F Int Requests 
    505 				//  IRQ6 = PWMC &  128Hz & 32Hz TBC Int Requests 
    506 				//  IRQ7 = 16Hz & 2Hz TBC Int Requests 
    507 				//IRQ0 = IRQ1 = IRQ2 = IRQ3 = IRQ4 = IRQ5 = IRQ6 = IRQ7 = 0;
    508 			//==================================================================
        ==
    509 
    510 			// INTERRUPT ENABLE REGISTERS...
    511 				IE0 = IE1 = IE2 = IE3 = IE4 = IE5 = IE6 = IE7 = 0;
    512 
    513 
    514 			// INTERRUPT REQUEST REGISTERS...
    515 				IRQ0 = IRQ1 = IRQ2 = IRQ3 = IRQ4 = IRQ5 = IRQ6 = IRQ7 = 0;
    516 
    517  			//------------- SET UP UART Interrupts Handler --------------------
        -----------------------
    518 				(void)irq_setHdr( (unsigned char)IRQ_NO_UA0INT, _intUart );
    519 					EUA0 = 1; 	// EUA0 is the enable flag for the UART0 interrupt (1=E
        NABLED)
***** main\main.c(518) : Warning : W5027 : Meaningless use of an expression
    520 					QUA0 = 0;	// Request Flag for the UART_0 	INTERRUPT (1=REQUEST, 0-
        NO-REQUEST)
    521 			//------------------------------------------------------------------
        ----------------------

                                                              Page :         15
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    522 			
    523  			//------------- SET UP I2C MASTER Interrupts Handler --------------
        -----------------------
    524 				(void)irq_setHdr( (unsigned char)IRQ_NO_I2CMINT, _intI2c );
    525 					EI2CM = 1; // EI2CM is the enable flag for the I2C MASTER interrup
        t (1=ENABLED)
***** main\main.c(524) : Warning : W5027 : Meaningless use of an expression
    526 					QI2CM = 0;
    527 			//------------------------------------------------------------------
        ----------------------
    528 			
    529 			//------------- SET UP ADC Interrupts Handler ----------------------
        ----------------------
    530 				(void)irq_setHdr( (unsigned char)IRQ_NO_SADINT, _intADC );
    531 					ESAD = 1; // ESAD is the enable flag for the ADC interrupt (1=ENAB
        LED)
***** main\main.c(530) : Warning : W5027 : Meaningless use of an expression
    532 					QSAD = 0; // Request Flag for the ADC INTERRUPT (1=REQUEST, 0-NO-R
        EQUEST)
    533 			//------------------------------------------------------------------
        ----------------------
    534 			
    535 			//------------- SET UP  xHz TBC Interrupt (Options: 128Hz, 32Hz, 16H
        z, 2Hz) --------------
    536 				(void)irq_setHdr( (unsigned char)IRQ_NO_T2HINT, TBC_ISR );  //Clear
         interrupt request flag
    537 					E2H = 1;	  // Enable x Hz TBC Interrupt (1=ENABLED)
***** main\main.c(536) : Warning : W5027 : Meaningless use of an expression
    538 					Q2H = 0;	  // Request flag for the TIME BASE COUNTER 2Hz Interrupt
        
    539 			// -----			
    540 			//------------- TBC...Set Ratio: : 1:1 => 1_1 ----------------------
        ----------------------
    541 				(void)tb_setHtbdiv( (unsigned char)TB_HTD_1_1 ); //Set the ratio of
         dividing frequency of the time base counter
    542 			//------------------------------------------------------------------
        ---------------------- 
    543 			
    544  			//------------- SET UP TIMER 8/9 Interrupt to increment timers ever
        y ~X ms ---------------
    545 				(void)irq_setHdr( (unsigned char)IRQ_NO_TM9INT, TMR89_ISR );  //Cle
        ar interrupt request flag
***** main\main.c(541) : Warning : W5027 : Meaningless use of an expression
    546 					ETM8 = 1;	  	// Enable timer 8 Interrupt (1=ENABLED
***** main\main.c(545) : Warning : W5027 : Meaningless use of an expression
    547 					ETM9 = 1;	  	// Enable timer 9 Interrupt (1=ENABLED)

                                                              Page :         16
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    548 					QTM8 = 0;		// Timer 8 IRQ request flag; 1=REQUEST
    549 					QTM9 = 0;		// Timer 9 IRQ request flag; 1=REQUEST
    550 					T8CS0 = 1;		// 111 => Select PLLCLK
    551 					T8CS1 = 1;
    552 					T8CS2 = 1;
    553 					T9CS0 = 1;		// 111 => Select PLLCLK
    554 					T9CS1 = 1;
    555 					T9CS2 = 1; 
    556 					tm_init(TM_CH_NO_89);
    557 					tm_set89Data(8192);				//A value of 1023 should yield 125us interr
        upts at 8.192 MHz
    558 					tm_set89Source(TM_CS_HTBCLK);
    559 					tm_start89();
    560 					T89M16 = 1;		//1 => sets 16-bit timer mode
    561 				
    562 					HTD3 = 1;	//High-Speed Time Base Counter Divide Register: 1111 = 9
        182kHz
    563 					HTD2 = 1;
    564 					HTD1 = 1;
    565 					HTD0 = 1; 
    566 			//------------------------------------------------------------------
        ----------------------
    567 
    568 			
    569  			//------------- SET UP TIMER A/B Interrupt to increment timers ever
        y ~X ms ---------------
    570 				(void)irq_setHdr( (unsigned char)IRQ_NO_TMBINT, TMRAB_ISR );  //Cle
        ar interrupt request flag
    571 					ETMA = 1;	  	// Enable timer 8 Interrupt (1=ENABLED
***** main\main.c(570) : Warning : W5027 : Meaningless use of an expression
    572 					ETMB = 1;	  	// Enable timer 9 Interrupt (1=ENABLED)
    573 					QTMA = 0;		// timer 8 IRQ request flag; 1=REQUEST
    574 					QTMB = 0;		// timer 9 IRQ request flag; 1=REQUEST
    575 					TACS0 = 1;		// 111 => Select PLLCLK
    576 					TACS1 = 1;
    577 					TACS2 = 1;
    578 					TBCS0 = 1;		// 111 => Select PLLCLK
    579 					TBCS1 = 1;
    580 					TBCS2 = 1; 
    581 					tm_init(TM_CH_NO_AB);
    582 					tm_setABData(8192);				//A value of 1023 should yield 125us interr
        upts at 8.192 MHz
    583 					tm_setABSource(TM_CS_HTBCLK);
    584 					tm_startAB();
    585 					TABM16 = 1;		//1 => sets 16-bit timer mode
    586 				

                                                              Page :         17
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    587 					HTD3 = 1;	//High-Speed Time Base Counter Divide Register: 1111 = 9
        182kHz
    588 					HTD2 = 1;
    589 					HTD1 = 1;
    590 					HTD0 = 1; 
    591 			//------------------------------------------------------------------
        ----------------------
    592 
    593 			
    594 			//------------- SET UP TIMER E/F Interrupt to increment timers every
         ~X ms ---------------
    595 				(void)irq_setHdr( (unsigned char)IRQ_NO_TMFINT, TMREF_ISR );  //Cle
        ar interrupt request flag
    596 					ETME = 1;	  	// Enable timer E Interrupt (1=ENABLED
***** main\main.c(595) : Warning : W5027 : Meaningless use of an expression
    597 					ETMF = 1;	  	// Enable timer F Interrupt (1=ENABLED)
    598 					QTME = 0;		// Timer E IRQ request flag; 1=REQUEST
    599 					QTMF = 0;		// Timer F IRQ request flag; 1=REQUEST
    600 					TECS0 = 1;		// 111 => Select PLLCLK
    601 					TECS1 = 1;
    602 					TECS2 = 1;
    603 					TFCS0 = 1;		// 111 => Select PLLCLK
    604 					TFCS1 = 1;
    605 					TFCS2 = 1;
    606 					tm_init(TM_CH_NO_EF);
    607 					tm_setEFData(8192);				//A value of 1023 should yield 125us interr
        upts at 8.192 MHz
    608 					tm_setEFSource(TM_CS_HTBCLK);
    609 					tm_startEF();
    610 					TEFM16 = 1;		//1 => sets 16-bit timer mode
    611 				
    612 					HTD3 = 1;	//High-Speed Time Base Counter Divide Register: 1111 = 9
        182kHz
    613 					HTD2 = 1;
    614 					HTD1 = 1;
    615 					HTD0 = 1; 
    616 			//------------------------------------------------------------------
        ----------------------
    617 			
    618 			//------------- SET UP B.3 as an input, and prepare to use as an ext
        ernal interrupt ------
    619 					PB3DIR = 1;
    620 					PB3C1 = 0;
    621 					PB3C0 = 0;
    622 					PB3MD1 = 0;
    623 					PB3MD0 = 0;

                                                              Page :         18
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    624 					PB3E1 = 1;
    625 					PB3E0 = 0;		//PBnE0-1 are used to choose the Rising-Edge Mode for 
        this interrupt
    626 					PB3SM = 0;
    627 			// -----
    628 			//------------- SET UP EXTERNAL INTERRUPT on B.3 -------------------
        ----------------------
    629 			//Options include following pins: A.0; A.1; A.2. B.0; B.1; B.2 & B.3
        
    630 			(void)irq_setHdr( (unsigned char)IRQ_NO_PB3INT, ExtInt_ISR );  //Cle
        ar interrupt request flag
    631 					EPB3 = 0;	// 1=> Enables Interrupt
***** main\main.c(630) : Warning : W5027 : Meaningless use of an expression
    632 					QPB3 = 0;	// EXT IRQ request flag; 1=REQUEST	
    633 			//------------------------------------------------------------------
        ----------------------   
    634 	
    635 			
    636 	irq_ei(); // Enable Interrupts
    637 	// IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII  
    638 
    639 	// ===== SET UP WATCH DOG TIMER ======================================
        =======
    640 		WDTMOD = 0x03; 	// 0x03=overflow 8sec...
    641 		main_clrWDT(); 	// Clear WDT   
    642 	//====================================================================
        =======
    643 	
    644 	
    645 	// ===== UART Initialization =========================================
        =======
    646 	//
    647 	//	Pin PB0 of mcu => RX  
    648 	// 	Pin PB1 of mcu => TX 
    649 	// 
    650 		(void)uart_init( (unsigned char)UART_CS_HSCLK,	// Generator       			
        	
    651 				 (unsigned short)HSCLK_KHZ,				// HSCLK frequency 				
    652 				 &_uartSetParam );						// Parameters from Structure    
    653 		uart_PortSet();									// Set UART Port Pins
***** main\main.c(652) : Warning : W5027 : Meaningless use of an expression
    654 		_flgUartFin = 0;
    655 		uart_stop();
    656 
    657 	//	
    658 	//====================================================================

                                                              Page :         19
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

        =======
    659 
    660 	// ===== I2C Initialization ==========================================
        =======
    661 	//	(void)i2c_init(I2C_MOD_FST, (unsigned short)HSCLK_KHZ, I2C_SYN_ON);
        
    662 	//	I20SYN = 1;		//Enable Clock Stretching	
    663 	//====================================================================
        =======
    664 
    665 
    666 
    667 		
    668 		
    669 }//End Initialization
    670 //=====================================================================
        ======
    671 
    672 
    673 //=====================================================================
        ======
    674 //	OSC set
    675 //=====================================================================
        ======
    676 static void SetOSC(void){
    677 
    678 	//Frequency Control Register 0 (FCON0) 	
    679 	//	used to control the high-speed clock generation circuit and to sele
        ct system clock.
    680 		SYSC0  = 0;			// Used to select the frequency of the HSCLK => 00=8.19
        2MHz.
    681 		SYSC1  = 0;			//...
    682 		OSCM1  = 1;			// 10 => Built-in PLL oscillation mode
    683 		OSCM0  = 0;			//...
    684 		
    685 	// Frequency Control Register 1 (FCON1)
    686 		ENOSC  = 1;			// 1=Enable High Speed Oscillator...
    687 		SYSCLK = 1;			// Select System Clock: 1=HSCLK; 0=LSCLK 
    688 		LPLL   = 1;			// 1=Enables the use of PLL oscillation - ADDED 4/30/20
        13
    689 
    690 	__EI();					//INT enable
    691 }
    692 //=====================================================================
        ======
    693 

                                                              Page :         20
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    694 
    695 //=====================================================================
        ======
    696 //	Analog Comparator setup
    697 //=====================================================================
        ======
    698 void analog_comparator(void){
    699 
    700 //Carl's Notes...
    701 
    702 //Step 1: Select the Interrupt Mode
    703 // 	a.) Interrupt Disabled      => CMPxE1 = 0; CMPxE0 = 0;	  
    704 // 	b.) Falling-Edge Int. Mode  => CMPxE1 = 0; CMPxE0 = 1;
    705 // 	c.) Rising-Edge Int. Mode   => CMPxE1 = 1; CMPxE0 = 0;
    706 // 	d.) Both-Edge Int. Mode     => CMPxE1 = 1; CMPxE0 = 1;
    707 
    708 
    709 //Step 2: Enable the Comparator                       => CMPxEN = 1;	
    710 
    711 //Step 3: Wait 3ms to allow Comparator to stabilize
    712 
    713 //Step 4: Read the comparison result			=> CMPxD: 0= +<-; 1= +>-
    714 
    715 //Step 5: Disable the Comparator				=> CMPxEN = 0;	
    716 
    717 
    718 
    719    //Comparator 0...
    720 	CMP0EN  = 0x01; 	// Comparator ON...
    721 	CMP0E1  = 0x00; 	// No Interupt...
    722 	CMP0E0  = 0x00;
    723 	CMP0SM1 = 0x00; 	// Detect without Sampling... 
    724 	CMP0RFS = 0x01; 	// Differential Input on B5
    725 
    726    //Comparator 0 OFF
    727 	CMP0EN  = 0x00;
    728 
    729 
    730 }
    731 //=====================================================================
        ======
    732 
    733 
    734 
    735 //=====================================================================
        ======

                                                              Page :         21
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    736 //	Clear All 3 Bits of Port A
    737 //=====================================================================
        ======
    738 void PortA_Low(void){
    739 
    740 //Carl's Notes...
    741 
    742 //Step 1: Set Pin Direction...
    743 //Step 2: Set Pin I/O Type...
    744 //Step 3: Set Pin Purpose...
    745 //Step 4: Set Pin Data...
    746 
    747 	//Direction...	
    748 	PA0DIR = 0;		// PortA Bit0 set to Output Mode...
    749 	PA1DIR = 0;		// PortA Bit1 set to Output Mode...
    750 	PA2DIR = 0;		// PortA Bit2 set to Output Mode...
    751 
    752 	//I/O Type...
    753 	PA0C1  = 1;		// PortA Bit0 set to CMOS Output...
    754 	PA0C0  = 1;		
    755 	PA1C1  = 1;		// PortA Bit1 set to CMOS Output...
    756 	PA1C0  = 1;	
    757 	PA2C1  = 1;		// PortA Bit2 set to CMOS Output...
    758 	PA2C0  = 1;	
    759 
    760 	//Purpose...
    761 	PA0MD1  = 0;	// PortA Bit0 set to General Purpose Output...
    762 	PA0MD0  = 0;	
    763 	PA1MD1  = 0;	// PortA Bit1 set to General Purpose Output...
    764 	PA1MD0  = 0;	
    765 	PA2MD1  = 0;	// PortA Bit2 set to General Purpose Output...
    766 	PA2MD0  = 0;	
    767 
    768 	//Data...
    769 	PA0D = 0;		// A.0 Output OFF....
    770 	PA1D = 0;		// A.1 Output OFF....
    771 	PA2D = 0;		// A.2 Output OFF....
    772 
    773 	main_clrWDT(); 	// Clear WDT
    774 
    775 }
    776 //=====================================================================
        ======
    777 
    778 //=====================================================================
        ======

                                                              Page :         22
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    779 //	Clear All 8 Bits of Port B
    780 //=====================================================================
        ======
    781 void PortB_Low(void){
    782 
    783 //Carl's Notes...
    784 
    785 //Step 1: Set Pin Direction...
    786 //Step 2: Set Pin I/O Type...
    787 //Step 3: Set Pin Purpose...
    788 //Step 4: Set Pin Data...
    789 
    790 	//Direction...	
    791 	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
    792 	PB1DIR = 0;		// PortB Bit1 set to Output Mode...
    793 	PB2DIR = 0;		// PortB Bit2 set to Output Mode...
    794 	PB3DIR = 0;		// PortB Bit3 set to Output Mode...
    795 	PB4DIR = 0;		// PortB Bit4 set to Output Mode...
    796 	PB5DIR = 0;		// PortB Bit5 set to Output Mode...
    797 	PB6DIR = 0;		// PortB Bit6 set to Output Mode...
    798 	PB7DIR = 0;		// PortB Bit7 set to Output Mode...
    799 
    800 	//I/O Type...
    801 	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...
    802 	PB0C0  = 1;		
    803 	PB1C1  = 1;		// PortB Bit1 set to CMOS Output...
    804 	PB1C0  = 1;	
    805 	PB2C1  = 1;		// PortB Bit2 set to CMOS Output...
    806 	PB2C0  = 1;	
    807 	PB3C1  = 1;		// PortB Bit3 set to CMOS Output...
    808 	PB3C0  = 1;		
    809 	PB4C1  = 1;		// PortB Bit4 set to CMOS Output...
    810 	PB4C0  = 1;	
    811 	PB5C1  = 1;		// PortB Bit5 set to CMOS Output...
    812 	PB5C0  = 1;	
    813 	PB6C1  = 1;		// PortB Bit6 set to CMOS Output...
    814 	PB6C0  = 1;	
    815 	PB7C1  = 1;		// PortB Bit7 set to CMOS Output...
    816 	PB7C0  = 1;	
    817 
    818 	//Purpose...
    819 	PB0MD1  = 0;	// PortB Bit0 set to General Purpose Output...
    820 	PB0MD0  = 0;	
    821 	PB1MD1  = 0;	// PortB Bit1 set to General Purpose Output...
    822 	PB1MD0  = 0;	
    823 	PB2MD1  = 0;	// PortB Bit2 set to General Purpose Output...

                                                              Page :         23
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    824 	PB2MD0  = 0;	
    825 	PB3MD1  = 0;	// PortB Bit3 set to General Purpose Output...
    826 	PB3MD0  = 0;	
    827 	PB4MD1  = 0;	// PortB Bit4 set to General Purpose Output...
    828 	PB4MD0  = 0;	
    829 	PB5MD1  = 0;	// PortB Bit5 set to General Purpose Output...
    830 	PB5MD0  = 0;
    831 	PB6MD1  = 0;	// PortB Bit6 set to General Purpose Output...
    832 	PB6MD0  = 0;	
    833 	PB7MD1  = 0;	// PortB Bit7 set to General Purpose Output...
    834 	PB7MD0  = 0;
    835 
    836 	//Data...
    837 	PB0D = 0;		// B.0 Output OFF....
    838 	PB1D = 0;		// B.1 Output OFF....
    839 	PB2D = 0;		// B.2 Output OFF....
    840 	PB3D = 0;		// B.3 Output OFF....
    841 	PB4D = 0;		// B.4 Output OFF....
    842 	PB5D = 0;		// B.5 Output OFF....
    843 	PB6D = 0;		// B.6 Output OFF....
    844 	PB7D = 0;		// B.7 Output OFF....
    845 
    846 	main_clrWDT(); 	// Clear WDT
    847 
    848 }
    849 //=====================================================================
        ======
    850 
    851 //=====================================================================
        ======
    852 //	Clear All 4 Bits of Port C
    853 //=====================================================================
        ======
    854 void PortC_Low(void){
    855 
    856 //Carl's Notes...
    857 
    858 //Step 1: Set Pin Direction...
    859 //Step 2: Set Pin I/O Type...
    860 //Step 3: Set Pin Purpose...
    861 //Step 4: Set Pin Data...
    862 
    863 	//Direction...	
    864 	PC0DIR = 0;		// PortC Bit0 set to Output Mode...
    865 	PC1DIR = 0;		// PortC Bit1 set to Output Mode...
    866 	PC2DIR = 0;		// PortC Bit2 set to Output Mode...

                                                              Page :         24
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    867 	PC3DIR = 0;		// PortC Bit3 set to Output Mode...
    868 
    869 
    870 	//I/O Type...
    871 	PC0C1  = 1;		// PortC Bit0 set to CMOS Output...
    872 	PC0C0  = 1;		
    873 	PC1C1  = 1;		// PortC Bit1 set to CMOS Output...
    874 	PC1C0  = 1;	
    875 	PC2C1  = 1;		// PortC Bit2 set to CMOS Output...
    876 	PC2C0  = 1;	
    877 	PC3C1  = 1;		// PortC Bit3 set to CMOS Output...
    878 	PC3C0  = 1;		
    879 
    880 	//Purpose...
    881 	PC0MD1  = 0;	// PortC Bit0 set to General Purpose Output...
    882 	PC0MD0  = 0;	
    883 	PC1MD1  = 0;	// PortC Bit1 set to General Purpose Output...
    884 	PC1MD0  = 0;	
    885 	PC2MD1  = 0;	// PortC Bit2 set to General Purpose Output...
    886 	PC2MD0  = 0;	
    887 	PC3MD1  = 0;	// PortC Bit3 set to General Purpose Output...
    888 	PC3MD0  = 0;	
    889 
    890 	//Data...
    891 	PC0D = 0;		// C.0 Output OFF....
    892 	PC1D = 0;		// C.1 Output OFF....
    893 	PC2D = 0;		// C.2 Output OFF....
    894 	PC3D = 0;		// C.3 Output OFF....
    895 
    896 	main_clrWDT(); 	// Clear WDT
    897 
    898 }
    899 //=====================================================================
        ======
    900 
    901 //=====================================================================
        ======
    902 //	Set All 3 Bits of Port A as Digital Input Pins
    903 //=====================================================================
        ======
    904 void PortA_Digital_Inputs(void){
    905 
    906 //Carl's Notes...
    907 
    908 //Step 1: Set Pin Direction...
    909 //Step 2: Set Pin I/O Type...

                                                              Page :         25
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    910 //Step 3: Set Pin Purpose...
    911 //Step 4: Set Pin Data...
    912 
    913 	//Direction...	
    914 	PA0DIR = 1;		// PortA Bit0 set to Input Mode...
    915 	PA1DIR = 1;		// PortA Bit1 set to Input Mode...
    916 	PA2DIR = 1;		// PortA Bit2 set to Input Mode...
    917 
    918 
    919 	//I/O Type...
    920 	PA0C1  = 1;		// PortA Bit0 set to Input with Pull-Up Resistor...
    921 	PA0C0  = 0;		
    922 	PA1C1  = 1;		// PortA Bit1 set to Input with Pull-Up Resistor...
    923 	PA1C0  = 0;	
    924 	PA2C1  = 1;		// PortA Bit2 set to Input with Pull-Up Resistor...
    925 	PA2C0  = 0;	
    926 
    927 	//Purpose...
    928 	PA0MD1  = 0;	// PortA Bit0 set to General Purpose I/O...
    929 	PA0MD0  = 0;	
    930 	PA1MD1  = 0;	// PortA Bit1 set to General Purpose I/O...
    931 	PA1MD0  = 0;	
    932 	PA2MD1  = 0;	// PortA Bit2 set to General Purpose I/O...
    933 	PA2MD0  = 0;	
    934 
    935 	main_clrWDT(); 	// Clear WDT
    936 
    937 }
    938 //=====================================================================
        ======
    939 
    940 //=====================================================================
        ======
    941 //	PWM Output on Port B - Pin 0
    942 //=====================================================================
        ======
    943 void PWM_B0_ON(int myPeriod, int myDutyCycle){
    944 
    945 		
    946 		//SET THE PERIOD...
    947 			PWCP = myPeriod;		// Init Period to (1=255kHz; 10=46kHz; 50=10kHz; 2
        00=2.5kH; ; 3185 = 160Hz; 3400=150Hz; 4250=120Hz; 5000=102Hz)
    948 
    949 		//PWCD =    10;		//10    ~  0.2 % duty cycle @ 120Hz
    950 		//PWCD =   100;		//100   ~  2.4 % duty cycle @ 120Hz
    951 		//PWCD =  1000;		//1000  ~ 23.5 % duty cycle @ 120Hz

                                                              Page :         26
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    952 		//PWCD = 4000;		//4000  ~ 94.0 % duty cycle @ 120Hz
    953 		//PWCD = 4150;		//4150  ~ 99.0 % duty cycle @ 120Hz
    954 		//PWCD =    20;		//20    ~  0.4 % duty cycle @ 120Hz	
    955 			PWCD =    myDutyCycle;		//12    ~  0.25% duty cycle @ 160Hz
    956 		
    957 		PCRUN = 1;		// TURN PWM ON
    958 
    959 }//END PWM_B0_ON Function
    960 //=====================================================================
        ======
    961 
    962 
    963 
    964 //=====================================================================
        ======
    965 //	PWM Output on Port B - Pin 0
    966 //=====================================================================
        ======
    967 void PinB0_PWM(void){
    968 
    969 //Carl's Notes...
    970 
    971 //Step 1: Set Pin Direction...
    972 //Step 2: Set Pin I/O Type...
    973 //Step 3: Set Pin Purpose...
    974 //Step 4: Select the Clock Mode...
    975 //Step 5: Set the Duty Cycle...
    976 //Step 5: Start the PWM Counter...
    977 
    978 	//Direction...	
    979 	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
    980 
    981 	//I/O Type...
    982 	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...
    983 	PB0C0  = 1;		
    984 
    985 	//Purpose...
    986 	PB0MD1  = 0;	// PortB Bit0 set to PWM Output (0,1)...
    987 	PB0MD0  = 1;	
    988 
    989 
    990 	//Select the Clock Mode...
    991 	PCCS1 = 0;	//00= LS; 01=HS; 10=PLL
    992 	PCCS0 = 1;
    993 
    994 	//SET THE PERIOD...(Added April 4th, 2013)

                                                              Page :         27
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    995 	PWCP = 4250;		// Init Period to (1=255kHz; 10=46kHz; 50=10kHz; 200=2.5
        kH; ; 3185 = 160Hz; 3400=150Hz; 4250=120Hz; 5000=102Hz)
    996 
    997 	//SET THE DUTY CYCLE...(Added April 15th, 2013)
    998 
    999 	//PWCD =    10;		//10    ~  0.2 % duty cycle @ 120Hz
   1000 	//PWCD =   100;		//100   ~  2.4 % duty cycle @ 120Hz
   1001 	//PWCD =  1000;		//1000  ~ 23.5 % duty cycle @ 120Hz
   1002 	//PWCD = 4000;		//4000  ~ 94.0 % duty cycle @ 120Hz
   1003 	//PWCD = 4150;		//4150  ~ 99.0 % duty cycle @ 120Hz
   1004 	//PWCD =    20;		//20    ~  0.4 % duty cycle @ 120Hz	
   1005 	PWCD =    12;		//12    ~  0.25% duty cycle @ 160Hz
   1006 
   1007 	PCRUN = 0;		// OFF to start
   1008 
   1009 }
   1010 //=====================================================================
        ======
   1011 
   1012 
   1013 
   1014 
   1015 
   1016 
   1017 
   1018 
   1019 /**********************************************************************
        *********
   1020 	Routine Name:	NOPms
   1021 	Form:			void NOP1000( unsigned int ms )
   1022 	Parameters:		unsigned int sec = "Number of seconds where the device is
         
   1023 						not doing anything"
   1024 	Return value:	void
   1025 	Description:	NOP for x seconds. Uses HTB* clock (512kHz) and 
   1026 					timer A+B (max 0xFFFF)*(HTBCLK = 1/16 * HSCLK 
   1027 					= (1/16)*8192kHz = 512kHz, see HTBDR to change if 
   1028 					we need an even smaller increment timer...)
   1029 					1/(512kHz) * 0xFFFF = 127ms
   1030 					
   1031 ***********************************************************************
        *******/
   1032 /* 
   1033 	void NOPms( unsigned int ms )
   1034 	{
   1035 	unsigned int timerThres;

                                                              Page :         28
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1036 	unsigned char TimeFlag;
   1037 	unsigned int TempSec;
   1038 	unsigned int timer;
   1039 	unsigned int timertest;
   1040 
   1041 		TempSec = ms;
   1042 		TimeFlag = 0;
   1043 
   1044 		tm_init(TM_CH_NO_AB);
   1045 		tm_setABSource(TM_CS_HTBCLK);
   1046 		tm_setABData(0xffff);
   1047 
   1048 		if(ms < 128){
   1049 			timerThres = 0x1FF * ms;
   1050 			TimeFlag = 0;
   1051 		}
   1052 		if(ms == 128){
   1053 			timerThres = 0xFFFF;
   1054 			TimeFlag = 0;
   1055 		}
   1056 		if(ms > 128){
   1057 			while(TempSec > 128){
   1058 				TempSec -= 128;
   1059 				TimeFlag++;
   1060 			}
   1061 			if(TempSec != 0){
   1062 				timerThres = 0x1FF * TempSec;
   1063 			}
   1064 			else{
   1065 				timerThres = 0xFFFF;
   1066 				TimeFlag--;
   1067 			}
   1068 		}
   1069 
   1070 	TimerRestart:
   1071 		main_clrWDT();	
   1072 		//tm_restart89();	//using LSCLK, the maximum delay time we have is ~2
         secs
   1073 		tm_startAB();
   1074 		timer = tm_getABCounter();
   1075 		while(timer < timerThres){
   1076 			timer = tm_getABCounter();
   1077 			timertest = timer;
   1078 		}
   1079 		if(TimeFlag !=0){
   1080 			tm_stopAB();

                                                              Page :         29
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1081 			TimeFlag--;
   1082 			timerThres = 0xFFFF;
   1083 			goto TimerRestart;
   1084 		}
   1085 	} //End NOPms 
   1086 */
   1087 
   1088 /**********************************************************************
        *********
   1089 	Routine Name:	_funcUartFin
   1090 	Form:			static void _funcUartFin( unsigned int size, unsigned char err
        Stat )
   1091 	Parameters:		unsigned int size		 : 
   1092 					unsigned char errStat	 : 
   1093 	Return value:	void
   1094 	Description:	UART transmission completion callback function.
   1095 ***********************************************************************
        *******/
   1096 static void _funcUartFin( unsigned int size, unsigned char errStat )
   1097 {
   1098 	uart_continue();						// Function in UART.c: process to continue send 
        & receive...
   1099 	_flgUartFin = (unsigned char)FLG_SET;
   1100 	main_reqNotHalt();						// uncommented 5/2/2013
   1101 }
   1102 
   1103 /**********************************************************************
        *********
   1104 	Routine Name:	_funcI2CFin
   1105 	Form:			static void _funcUartFin( unsigned int size, unsigned char err
        Stat )
   1106 	Parameters:		unsigned int size		 : 
   1107 					unsigned char errStat	 : 
   1108 	Return value:	void
   1109 	Description:	UART transmission completion callback function.
   1110 ***********************************************************************
        *******/
   1111 static void _funcI2CFin( unsigned int size, unsigned char errStat )
***** main\main.c(1101) : Warning : W5025 : 'errStat': unreferenced formal para
        meter
***** main\main.c(1101) : Warning : W5025 : 'size': unreferenced formal paramet
        er
   1112 {
   1113 	i2c_continue();							// Function in UART.c: process to continue send 
        & receive...
   1114 	_flgI2CFin = (unsigned char)FLG_SET;

                                                              Page :         30
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1115 	main_reqNotHalt();						// uncommented 5/2/2013
   1116 }
   1117 
   1118 /**********************************************************************
        *********
   1119 	Routine Name:	_intI2c
   1120 	Form:			static void _intI2c( void )
   1121 	Parameters:		void
   1122 	Return value:	void
   1123 	Description:	I2C handler.
   1124 ***********************************************************************
        *******/
   1125 static void _intI2c( void )
***** main\main.c(1116) : Warning : W5025 : 'errStat': unreferenced formal para
        meter
***** main\main.c(1116) : Warning : W5025 : 'size': unreferenced formal paramet
        er
   1126 {
   1127 	(void)i2c_continue();
   1128 	main_reqNotHalt();
***** main\main.c(1127) : Warning : W5027 : Meaningless use of an expression
   1129 }
   1130 
   1131 /**********************************************************************
        *********
   1132 	Routine Name:	_intADC
   1133 	Form:			static void _intADC( void )
   1134 	Parameters:		void
   1135 	Return value:	void
   1136 	Description:	I2C handler.
   1137 ***********************************************************************
        *******/
   1138 static void _intADC( void )
   1139 {
   1140 	_flgADCFin = 1;
   1141 }
   1142 
   1143 /**********************************************************************
        *********
   1144 	Routine Name:	main_reqNotHalt
   1145 	Form:			void reqNotHalt( void )
   1146 	Parameters:		void
   1147 	Return value:	void
   1148 	Description:	request not halt.
   1149 ***********************************************************************
        *******/

                                                              Page :         31
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1150 void main_reqNotHalt( void )
   1151 {
   1152 	_reqNotHalt = (unsigned char)FLG_SET;
   1153 }
   1154 
   1155 /**********************************************************************
        *********
   1156 	Routine Name:	_intUart
   1157 	Form:			static void _intUart( void )
   1158 	Parameters:		void
   1159 	Return value:	void
   1160 	Description:	UART handler.
   1161 ***********************************************************************
        *******/
   1162 static void _intUart( void )
   1163 {
   1164 	uart_continue(); 	//in UART.c: process to continue send and receive...
        
   1165 }
   1166 
   1167 
   1168 
   1169 
   1170 //=====================================================================
        ======
   1171 //INTERRUPT SERVICE ROUTINE FOR TBC
   1172 static void TBC_ISR( void ) 
   1173 {
   1174 	//Your Code Here...
   1175 	//LED2_pin ^= 1;	// Toggle LED
   1176 	tb_setHtbdiv( (unsigned char)TB_HTD_1_1 ); //Set the ratio of dividing
         frequency of the time base counter
   1177 }
   1178 //=====================================================================
        ======
   1179 
   1180 //=====================================================================
        ======
   1181 //INTERRUPT SERVICE ROUTINE FOR Timer8/9
   1182 static void TMR89_ISR( void ) 
   1183 {
   1184 	//Your Code Here...
   1185 	//LED1_pin ^= 1;
   1186 	tm_init(TM_CH_NO_89);
   1187 	tm_start89();		//Clear & Restart Timer...
   1188 }

                                                              Page :         32
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1189 //=====================================================================
        ======
   1190 
   1191 //=====================================================================
        ======
   1192 //INTERRUPT SERVICE ROUTINE FOR TimerA/B
   1193 static void TMRAB_ISR( void ) 
   1194 {
   1195 	//Your Code Here...
   1196 	//LED4_pin ^= 1;
   1197 	tm_init(TM_CH_NO_AB);
   1198 	tm_startAB();		//Clear & Restart Timer...
   1199 }
   1200 //=====================================================================
        ======
   1201 
   1202 //=====================================================================
        ======
   1203 //INTERRUPT SERVICE ROUTINE FOR TimerE/F
   1204 static void TMREF_ISR( void ) 
   1205 {
   1206 	//Your Code Here...
   1207 	//LED7_pin ^= 1;
   1208 	tm_init(TM_CH_NO_EF);
   1209 	tm_startEF();		//Clear & Restart Timer...
   1210 }
   1211 //=====================================================================
        ======
   1212 
   1213 
   1214 //=====================================================================
        ======
   1215 // ----- ISR for External Interrupt Pin 
   1216 static void ExtInt_ISR( void ) 
   1217 {
   1218 	//Your Code Here...
   1219 	//LED9_pin ^= 1;
   1220 	
   1221 }
   1222 //=====================================================================
        ======
   1223 
   1224 //=====================================================================
        ======
   1225 void NOPx( unsigned int MyCount )
   1226 {

                                                              Page :         33
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1227 unsigned int ONCNT = 0;
   1228 unsigned int xxx;
   1229 
   1230 xxx = MyCount;
   1231 
   1232 	while(ONCNT < xxx) {	// NOP for "xxx" Cycles
   1233 		ONCNT++;
   1234 	}
   1235 	ONCNT = 0;			// Reset Counter 
   1236 }
   1237 //=====================================================================
        ======
   1238 
   1239 
   1240 
   1241 
   1242 
   1243 
   1244 
   1245 
   1246 
   1247 
   1248 
   1249 
   1250 //=====================================================================
        ======
   1251 //Simple function to demonstrate Serial LCD
   1252 void UART_TX_TEST (void)
   1253 {
   1254 	// ===== START UART TX TEST... =====
   1255 		unsigned char UARTStartupMessage[26] = {"ML610Q111 UART - TX Demo: "}
        ;
   1256 		
   1257 		//CLEAR Parallax LCD Display!
   1258 		_flgUartFin = 0;
   1259 		uart_stop();
   1260 		uart_startSend(UARTStartupMessage, 26, _funcUartFin);
   1261 		while(_flgUartFin != 1){
   1262 			main_clrWDT(); 
   1263 		}
   1264 			
   1265 	// ===== END UART TX TEST =====  
   1266 	
   1267 
   1268 }
   1269 //=====================================================================

                                                              Page :         34
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

        ======
   1270 
   1271 //=====================================================================
        ======
   1272 void UART_RX_TEST(void){
   1273 
   1274 	unsigned char	MyRx[1];	//Small Array...for UART Receive, etc
   1275 	int i;
   1276  	
   1277 	// CLEAR the Array...
   1278 		for(i = 0; i<1; i++) 
   1279 		{
   1280 			MyRx[i] = 0x20;	// 0x20 = "Space" => Clear Array
   1281 		} 
   1282 	 
   1283 	
   1284 	// ===== START UART RX TEST... =====
   1285 		_flgUartFin = 0;
   1286 		uart_stop();
   1287 		uart_startReceive(MyRx, 1, _funcUartFin);	// RX!
   1288 		while(_flgUartFin != 1){
   1289 			main_clrWDT();	
   1290 			//LED5_pin ^= 1;	//waiting for data...
   1291 		}
   1292 		
   1293  		//If data in RX Buffer...echo it out the TX port
   1294 		if(MyRx[0] != 0x20){			
   1295 			//Echo the Received Data
   1296 			_flgUartFin = 0;
   1297 			uart_stop();
   1298 			uart_startSend(MyRx, 1, _funcUartFin);	// TX!
   1299 			while(_flgUartFin != 1){
   1300 				main_clrWDT(); 
   1301 			}
   1302 		} 
   1303 	// ===== END UART RX TEST =====
   1304 		
   1305 }
   1306 //=====================================================================
        ======
   1307 
   1308 //=====================================================================
        ======
   1309 void Jerrys_Function(void){
   1310 	int i;
   1311 

                                                              Page :         35
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1312 		
   1313 }
   1314 //=====================================================================
        ======
   1315 
   1316 ***** main\main.c(1313) : Warning : W5029 : 'i': unreferenced local variable
***** main\main.c(1316) : Warning : W5030 : 'tm_get89Counter': unreferenced sta
        tic function
***** main\main.c(1316) : Warning : W5030 : 'tm_getEFSource': unreferenced stat
        ic function
***** main\main.c(1316) : Warning : W5030 : 'tm_getABSource': unreferenced stat
        ic function
***** main\main.c(1316) : Warning : W5030 : 'tm_get89Source': unreferenced stat
        ic function
***** main\main.c(1316) : Warning : W5030 : 'tm_restartAB': unreferenced static
         function
***** main\main.c(1316) : Warning : W5030 : 'tm_clrABCounter': unreferenced sta
        tic function
***** main\main.c(1316) : Warning : W5030 : 'tm_restartEF': unreferenced static
         function
***** main\main.c(1316) : Warning : W5030 : 'tm_clrEFCounter': unreferenced sta
        tic function
***** main\main.c(1316) : Warning : W5030 : 'tm_getABCounter': unreferenced sta
        tic function
***** main\main.c(1316) : Warning : W5030 : 'tm_getEFCounter': unreferenced sta
        tic function
***** main\main.c(1316) : Warning : W5030 : 'tm_stop89': unreferenced static fu
        nction
***** main\main.c(1316) : Warning : W5030 : 'tm_stopEF': unreferenced static fu
        nction
***** main\main.c(1316) : Warning : W5030 : 'tm_stopAB': unreferenced static fu
        nction
***** main\main.c(1316) : Warning : W5030 : 'tm_setAOneshot': unreferenced stat
        ic function
***** main\main.c(1316) : Warning : W5030 : 'tm_setBOneshot': unreferenced stat
        ic function
***** main\main.c(1316) : Warning : W5030 : 'tm_set9Oneshot': unreferenced stat
        ic function
***** main\main.c(1316) : Warning : W5030 : 'tm_set8Oneshot': unreferenced stat
        ic function
***** main\main.c(1316) : Warning : W5030 : '_funcI2CFin': unreferenced static 
        function
***** main\main.c(1316) : Warning : W5030 : 'tm_clr89Counter': unreferenced sta
        tic function
***** main\main.c(1316) : Warning : W5030 : 'tm_restart89': unreferenced static

                                                              Page :         36
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

         function



Error(s)     :  0
Warning(s)   :  51



                                                              Page :         37
                                                              Date : 07-30-2014
                                                              Time :   11:05:25
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c



                            STACK INFORMATION
                            -----------------

  FUNCTION                         LOCALS    CONTEXT    OTHERS    TOTAL
  --------                         ------    -------    ------    -----
  _feram_init                      0         2          2         4         
  _feram_write                     0         4          0         4         
  _feram_read                      0         4          0         4         
  _feram_continue                  2         4          8         14        
  _feram_stop                      0         2          0         2         
  _feram_getStatus                 0         0          0         0         
  __i2cFin                         2         6          0         8         
  _main                            0         0          2         2         
  _main_clrWDT                     0         0          0         0         
  _Initialization                  0         2          2         4         
  _SetOSC                          0         0          0         0         
  _analog_comparator               0         0          0         0         
  _PortA_Low                       0         0          0         0         
  _PortB_Low                       0         0          0         0         
  _PortC_Low                       0         0          0         0         
  _PortA_Digital_Inputs            0         0          0         0         
  _PWM_B0_ON                       0         0          0         0         
  _PinB0_PWM                       0         0          0         0         
  __funcUartFin                    0         2          0         2         
  __funcI2CFin                     0         2          0         2         
  __intI2c                         0         2          0         2         
  __intADC                         0         0          0         0         
  _main_reqNotHalt                 0         0          0         0         
  __intUart                        0         0          0         0         
  _TBC_ISR                         0         0          0         0         
  _TMR89_ISR                       0         2          0         2         
  _TMRAB_ISR                       0         2          0         2         
  _TMREF_ISR                       0         2          0         2         
  _ExtInt_ISR                      0         0          0         0         
  _NOPx                            4         4          0         8         
  _UART_TX_TEST                    26        4          2         32        
  _UART_RX_TEST                    2         4          2         8         
  _Jerrys_Function                 0         0          0         0         
