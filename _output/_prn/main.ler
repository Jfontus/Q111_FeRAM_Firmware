
                                                              Page :          1
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

      1 //*********************************************************************
        ********
      2 //
      3 // USDC TEMPLATE FIRMWARE for Q111 MCU  
      4 //
      5 // Program:	 LAPIS FeRAM Development Board Demo Code 
      6 //
      7 // Purpose:	 Demonstration Code for use with LAPIS MCU Development Boar
        d 
      8 //
      9 // This single Example code Demonstrates all the following modules work
        ing: 
     10 //		 1.) MCU Initialization (OSC; PORTS; PERIPHERIALS; WDT; etc.) 
     11 //		 2.) Demo of 2Hz INTERRUPT on TBC
     12 //		 3.) Demo of Timer-overflow INTERRUPTS on TMR 8/9
     13 //		 4.) Demo of Timer-overflow INTERRUPTS on TMR A/B
     14 //		 5.) Demo of Timer-overflow INTERRUPTS on TMR E/F
     15 //		 6.) Demo of Hardware PWM Control 
     16 //		 7.) UART TX Demo 
     17 //		 8.) UART RX Demo
     18 //		 9.) ADC Demo...
     19 //		10.) IsC Master Demo...    
     20 //
     21 // Authors:	 C. Schell, K. Bahar, F. Lee, & J. Fontus
     22 //		 	 ROHM Semiconductor USA, LLC
     23 //		 	 US Design Center
     24 //
     25 // Notes: 	
     26 //		1.) RTLU8 RUNTIME LIBRARIES:
     27 //				RTLU8 is a C runtime library for mcu's that use the LAPIS nX-U8 a
        s the CPU core
     28 //				RTLU8 provides a large number of routines that can be used when p
        rogramming 
     29 //				in C. Much effort and time can be saved by using these library ro
        utines.
     30 //				For Example, to use the sprintf library for UART commands, you ne
        ed to add 
     31 //				the "LU8100SW.lib" RT Library. To do this open the LAPIS IDE & se
        lect:
     32 //				'Project -> Options -> Target' from the menu bar.  In the "Genera
        l" Tab, 
     33 //				type in "LU8100SW.lib" to add the RTLU8 runtime library for small
         memory 
     34 //				model containing sprintf and many other routines
     35 //		2.) CHECKING THE PROGRAM SIZE:
     36 //				You can check the program size from the map file generated during

                                                              Page :          2
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

         "Compile" step by the Linker. 
     37 //				Please refer to CCU8 programming guide: (3.1. Map Files and 3.1.4
        . Program and Data size)
     38 //				Results will look something like this:
     39 //					Program and Data Sizes
     40 //					This portion of the map file gives aggregate program and data si
        zes for each segment type.
     41 //						Total size (CODE  ) = 02CE4   (11492)
     42 //						Total size (DATA  ) = 002E7   (743)
     43 //						Total size (BIT   ) = 00000.0 (0.0)
     44 //						Total size (NVDATA) = 00000   (0)
     45 //						Total size (NVBIT ) = 00000.0 (0.0)
     46 //						Total size (TABLE ) = 0828A   (33418)
     47 //
     48 // Started:  April 6th, 2013
     49 // Updated:	 JULY 24th, 2014
     50 //*********************************************************************
        ********
     51 
     52 // ================================ ML610Q111 =========================
        ======== 
     53 //	ML610Q111 MCU PINOUT - TSSOP20 Package
     54 //
     55 // 		Pin 01 of mcu => PC0 / TM9OUT / PWMF0 
     56 // 		Pin 02 of mcu => RESET_N
     57 // 		Pin 03 of mcu => TEST
     58 // 		Pin 04 of mcu => PB0 / CMP1OUT / OUTCLK / PWMC / RXD0 / AIN2 / EXI
        4
     59 // 		Pin 05 of mcu => PB1 / TXD1 / TXD0 / PWMD / AIN3 / EXI5 
     60 // 		Pin 06 of mcu => PB2 / PWME / RXD1 / EXI6 
     61 // 		Pin 07 of mcu => PB3 / TXD1 / SIN / EXI7 
     62 // 		Pin 08 of mcu => PA2 / CMP0OUT / CLKIN / PWME / EXI2 
     63 // 		Pin 09 of mcu => TESTF
     64 // 		Pin 10 of mcu => PC3 / TMFOUT
     65 
     66 // 		Pin 11 of mcu => PC2 / PWMF2 
     67 // 		Pin 12 of mcu => PA1 / EXI1 / AIN1 / CMP1P / PWMD / LSCLK / TMFOUT
        
     68 // 		Pin 13 of mcu => PB4 / CMP0P / SOUT / TXD0 / TXD1
     69 // 		Pin 14 of mcu => PB5 / CMP0M / RXD0 / SCK / SCL / PWMF2
     70 // 		Pin 15 of mcu => PB6 / AIN4 / CLKIN / SDA / PWMF1
     71 // 		Pin 16 of mcu => VSS
     72 // 		Pin 17 of mcu => VDD
     73 // 		Pin 18 of mcu => PB7 / AIN5 / RXD1 / LSCLK / PWMF0 / PWMC
     74 // 		Pin 19 of mcu => PA0 / EXI0 / AIN0 / PWMC / OUTCLK / TM9OUT
     75 // 		Pin 20 of mcu => PC1 / PWMF1

                                                              Page :          3
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

     76 //
     77 //=====================================================================
        ========
     78 
     79 //*********************************************************************
        ********
     80 // Microcontroller's connections on the LAPIS MCU Development Board to 
        the 
     81 //  Plug 'n Play, Raspberry Pi Compatible, Universal Connectors:
     82 //
     83 // Pin-01 => 3.3V Power					Pin-02 => 5.0V Power (VBUS)
     84 // Pin-03 => I2C-SDA  (Q111 I/O B.6)	Pin-04 => no connection
     85 // Pin-05 => I2C-SCL  (Q111 I/O B.5)*	Pin-06 => GROUND
     86 // Pin-07 => no connection*				Pin-08 => UART-TX  (Q111 I/O B.1)
     87 // Pin-09 => no connection				Pin-10 => UART-RX  (Q111 I/O B.0) 
     88 // Pin-11 => GPIO #17 (Q111 I/O A.0)	Pin-12 => GPIO #18 (Q111 I/O B.7)
     89 // Pin-13 => GPIO #21 (Q111 I/O A.1)	Pin-14 => no connection
     90 // Pin-15 => GPIO #22 (Q111 I/O A.2)	Pin-16 => GPIO #23 (Q111 I/O C.2)
     91 // Pin-17 => no connection				Pin-18 => GPIO #24 (Q111 I/O C.3)
     92 // Pin-19 => SPI-MOSI (Q111 I/O B.4)	Pin-20 => no connection
     93 // Pin-21 => SPI-MISO (Q111 I/O B.3)	Pin-22 => GPIO #25 (Q111 I/O B.2)
     94 // Pin-23 => SPI-SCLK (Q111 I/O B.5)*	Pin-24 => SPI-CS0  (Q111 I/O C.0)
        
     95 // Pin-25 => no connection				Pin-26 => SPI-CS1  (Q111 I/O C.1)
     96 // 
     97 //=====================================================================
        ========
     98 //*********************************************************************
        ********
     99 
    100 //*********************************************************************
        ********
    101 // Q111 Microcontroller's I/O Pins at J3 on the LAPIS MCU Development B
        oard 
    102 //
    103 // Pin-01 => A.0				Pin-02 => A.1
    104 // Pin-03 => A.2				Pin-04 => B.0
    105 // Pin-05 => B.1				Pin-06 => B.2
    106 // Pin-07 => B.3				Pin-08 => B.4
    107 // Pin-09 => B.5				Pin-10 => B.6 
    108 // Pin-11 => B.7				Pin-12 => C.0
    109 // Pin-13 => C.1				Pin-14 => C.2
    110 // Pin-15 => C.3				Pin-16 => GROUND
    111 //
    112 //=====================================================================
        ========

                                                              Page :          4
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    113 //*********************************************************************
        ********
    114 
    115 
    116 //***** PREPROCESSOR DIRECTIVES ***************************************
        ********
    117  // INCLUDED FILES...
    118 	#include	<ML610111.H>	// Lapis Micro ML610Q111 on LAPIS MCU Developmen
        t Board
    119 	#include	<stdlib.h>		// General-purpose utilities
    120 	#include	<stdio.h>		// I/O-related processing
    121 	#include 	<common.h>		// Common Definitions
    122 	#include 	<irq.h>			// IRQ Definitions
    123 	#include 	<mcu.h>			// MCU Definition
    124 	#include	<i2c.h>			// I2C Definition
    125 	#include 	<tbc.h>			// Set TBC (Timer Based Clock) API
    126 	#include 	<timer.h>		// Timer Macros & APIs
    127 	#include	<math.h>		// Mathematical functions
    128 	#include 	<uart.h>		// UART Function Prototypes	
    129 	//#include	<float.h>		// Numerical limits for floating-point numbers	
    130 	//#include	<string.h>		// Character string manipulation routines
    131 	//#include	<yvals.h>		// Called for by most Header Files
    132 
    133 	//#include 	<main.h>		// Clear WDT API
    134 	//#include	<ctype.h>		// Character classification and conversion 
    135 	//#include	<errno.h>		// Error identifiers Library
    136 	//#include	<limits.h>		// Numerical limits for integers
    137 	//#include	<muldivu8.h>	// Multiplication and Division accelerator
    138 	//#include	<setjmp.h>		// Global jump (allow jumps to locations outsid
        e the current function) 
    139 	//#include	<signal.h>		// Signal handling functions
    140 	//#include	<stdarg.h>		// Variable numbers of arguments
    141 	//#include	<stddef.h>		// Standard types and macros 
    142 	//#include	<yfuns.h>		//  
    143 	
    144 //*********************************************************************
        ********
    145  // I/O PIN DATA ALIASES...
    146 // Connections for Q111 Universal Socket
    147 	#define RX 			PB0D 
    148 	#define TX 			PB1D
    149  
    150 	#define I2C_SDA 	PB6D 
    151 	#define I2C_SCL 	PB5D 
    152 
    153 	#define GPIO_17		PA0D

                                                              Page :          5
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    154 	#define GPIO_21		PA1D
    155 	#define GPIO_22		PA2D
    156 	#define GPIO_18		PB7D
    157 	#define GPIO_23		PC2D
    158 	#define GPIO_24		PC3D
    159 	#define GPIO_25		PB2D
    160 
    161 	#define SPI_MOSI	PB4D
    162 	#define SPI_MISO	PB3D
    163 	#define SPI_SCL 	PB5D
    164 	#define SPI_CS0		PC0D
    165 	#define SPI_CS1 	PC1D 	
    166 	
    167 	
    168 
    169 //*********************************************************************
        ********
    170 //=====================================================================
        ======
    171 //   MACROS: 
    172 //=====================================================================
        ======
    173 
    174 // ===== Peripheral setting.=====
    175 	#define HSCLK_KHZ	( 8192u )	// 8MHz = 8000kHz (will be multiplied by 1
        024 to give 8,192,000Hz)
    176 	#define FLG_SET	    ( 0x01u ) 	
    177 
    178 // ===== SET DESIRED UART SETTINGS HERE! (Options in UART.h) ==========
        ======
    179 #define UART_BAUDRATE		( UART_BR_9600BPS) 	// Data Bits Per Second - Te
        sted at rates from 2400bps to 512000bps!
    180 #define UART_DATA_LENGTH	( UART_LG_8BIT )		// x-Bit Data
    181 #define UART_PARITY_BIT		( UART_PT_NON )			// Parity
    182 #define UART_STOP_BIT		( UART_STP_1BIT )		// x Stop-Bits
    183 #define UART_LOGIC			( UART_NEG_POS )		// Desired Logic
    184 #define UART_DIRECTION		( UART_DIR_LSB )		// LSB or MSB First 
    185 
    186 		// ===== UART Settings =====
    187 		//STRUCTURE:
    188 			static const tUartSetParam  _uartSetParam = {		// UART Parameters
    189 				UART_BAUDRATE,						// Members of Structure...
    190 				UART_DATA_LENGTH,					// Members of Structure...
    191 				UART_PARITY_BIT,					// Members of Structure...
    192 				UART_STOP_BIT,						// Members of Structure...
    193 				UART_LOGIC,							// Members of Structure...

                                                              Page :          6
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    194 				UART_DIRECTION						// Members of Structure...
    195 			};
    196 //=====================================================================
        ======
    197 
    198 
    199 
    200 //*********************************************************************
        ********
    201 //=====================================================================
        ======
    202 //   STRUCTURES: 
    203 //=====================================================================
        ======
    204 	//Example Structure Declaration
    205 	typedef struct {
    206 		unsigned char state     : 1;
    207 		unsigned char state_sub : 2;
    208 		unsigned char reserve   : 5;
    209 	} STRUCT_STATE;	 
    210 
    211 
    212 //*********************************************************************
        ********
    213 
    214 
    215 //*********************************************************************
        ********
    216 //=====================================================================
        ======
    217 //   FUNCTION PROTOTYPES: 
    218 //	Establishes the name and return type of a function and may specify t
        he 
    219 // 	types, formal parameter names and number of arguments to the functi
        on                                 
    220 //=====================================================================
        ======
    221 	void main_clrWDT( void );				// no return value and no arguments
    222 	void Initialization( void );			// no return value and no arguments
    223 	void SetOSC( void );					// no return value and no arguments
    224 
    225 	static void NOPms(unsigned int ms);		// no return value - Delay in ms 
        as Argument
    226 	void NOPx( unsigned int MyCount );		// no return value - Count in ms a
        s Argument
    227 	void PWM_B0_ON(int myPeriod, int myDutyCycle);		// no return value - P

                                                              Page :          7
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

        eriod & DutyCycle Variables as Arguments
    228 
    229 	void analog_comparator( void );			
    230 	void PortA_Low( void );					// no return value and no arguments
    231 	void PortB_Low( void );					// no return value and no arguments
    232 	void PortC_Low( void );					// no return value and no arguments
    233 	void PortA_Digital_Inputs( void );		// no return value and no argument
        s
    234 	void PinB0_PWM( void ); 				// no return value and no arguments
    235 	void main_reqNotHalt( void );			// no return value and no arguments
    236 
    237 	static void _initPeri( void );
    238 	static void _intWdt( void );
    239 	static void _intTimer( void );
    240 
    241 	void _funcUartFin( unsigned int size, unsigned char errStat );
    242 	void _intUart( void );
    243 
    244 	void _funcI2CFin( unsigned int size, unsigned char errStat );
    245 	void checkI2C( void );
    246 	void _intI2c( void );
    247 
    248 	void _intADC( void );
    249 	
    250 	void TBC_ISR( void );			// TBC Interrupt Service Routine...
    251 	void TMR89_ISR( void );			// TIMER 8/9 Interrupt Service Routine...
    252 	void TMRAB_ISR( void );			// TIMER A/B Interrupt Service Routine...
    253 	void TMREF_ISR( void );			// TIMER E/F Interrupt Service Routine...
    254 	void ExtInt_ISR( void );		// External Interrupt Interrupt Service Rout
        ine...
    255 	
    256 	void SerialLCD_Init_and_Clear (void);	// no return value and no argume
        nts 
    257 
    258 	void UART_TX_TEST (void);				// no return value and no arguments
    259 	void UART_RX_TEST (void);				// no return value and no arguments
    260 
    261 	void Jerrys_Function (void);
    262 
    263 //*********************************************************************
        ********
    264 //GLOBALS...
    265 
    266 	//UART, I2C & ADC Variables
    267 	unsigned char	_flgUartFin;
    268 	unsigned char 	_flgI2CFin;

                                                              Page :          8
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    269 	unsigned char	_flgADCFin;
    270 	unsigned char	_reqNotHalt;
    271 	
    272 
    273 /*######################################50#############################
        #########*/
    274 /*#                                  APIs                              
              #*/
    275 /*#####################################################################
        #######*/
    276 //*********************************************************************
        ********
    277 //=====================================================================
        ======
    278 //  	Start of MAIN FUNCTION
    279 //=====================================================================
        ======
    280 int main(void) 
    281 {
    282 	//LOCAL VARIABLES
    283 	char char_a;				// -128 to 127
    284 	unsigned char uchar;		// 0-255
    285 	unsigned int uint, delay;	// 0 to 65,535
    286 	long long_a;				// -2,147,483,648 to 2,147,483,647
    287 	float float_a;				// 1.17549435e-38 to 3.40282347e+38
    288 	double double_a;			// 2.2250738585072014e-308 to 1.7976931348623157e+3
        08 
    289 	int i,j,k,x,y;				// -32,768 to 32767
    290 
    291 	Init:
    292 		Initialization();		// Init Micro...(Ports, Timers, OSC, IRQ's, UART, 
        etc...)
    293 		
    294 	Primary_Loop:		
    295 		//PLACE USER CODE HERE...
    296 		//PWM_B0_ON(4000, 125);	//period, Duty Cycle variables
    297 
    298 		//Heartbeat_LED_pin ^= 1;
    299 		GPIO_17 ^=1; 
    300 		Jerrys_Function();
    301 		main_clrWDT();
    302 		NOPx(65000);
***** main\main.c(302) : Warning : W5013 : Parameter mismatch, actual parameter
         converted
    303 
    304 	goto Primary_Loop;

                                                              Page :          9
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    305 		
    306 
    307 }//end main
    308 
    309 //=====================================================================
        ======
    310 //  	End of MAIN FUNCTION
    311 //=====================================================================
        ======
    312 //*********************************************************************
        ********
    313 
    314 
    315 
    316 
    317 //*********************************************************************
        ********
    318 //=====================================================================
        ======
    319 //  	Start of Other Functions...
    320 //=====================================================================
        ======
    321 //*********************************************************************
        ********
    322 
    323 
    324 /**********************************************************************
        *********
    325 	Routine Name:	main_clrWDT
    326 	Form:			void main_clrWDT( void )
    327 	Parameters:		void
    328 	Return value:	void
    329 	Description:	clear WDT.
    330 ***********************************************************************
        *******/
    331 
    332 void main_clrWDT( void )
***** main\main.c(307) : Warning : W5029 : 'y': unreferenced local variable
***** main\main.c(307) : Warning : W5029 : 'x': unreferenced local variable
***** main\main.c(307) : Warning : W5029 : 'k': unreferenced local variable
***** main\main.c(307) : Warning : W5029 : 'j': unreferenced local variable
***** main\main.c(307) : Warning : W5029 : 'i': unreferenced local variable
***** main\main.c(307) : Warning : W5029 : 'double_a': unreferenced local varia
        ble
***** main\main.c(307) : Warning : W5029 : 'float_a': unreferenced local variab
        le

                                                              Page :         10
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

***** main\main.c(307) : Warning : W5029 : 'long_a': unreferenced local variabl
        e
***** main\main.c(307) : Warning : W5029 : 'delay': unreferenced local variable
***** main\main.c(307) : Warning : W5029 : 'uint': unreferenced local variable
***** main\main.c(307) : Warning : W5029 : 'uchar': unreferenced local variable
***** main\main.c(307) : Warning : W5029 : 'char_a': unreferenced local variabl
        e
***** main\main.c(307) : Warning : W6002 : 'Init': unreferenced label
    333 {
    334 	//__DI(); // Disable multi-interrupts
    335 		do {
    336 			WDTCON = 0x5Au;
    337 		} while (WDP != 1);
    338 		WDTCON = 0xA5u;
    339 
    340 	//__EI(); // Re-Enable multi-interrupts
    341 }
    342 
    343 //=====================================================================
        ======
    344 //	Initialize Micro to Desired State...
    345 //=====================================================================
        ======
    346 static void Initialization(void){
    347 
    348 	//Initialize Peripherals	
    349 		//BLKCON2 Control Bits...Manually Set 4/12/2013
    350 			DSIO0 = 1; // 0=> Enables Synchronous Serial Port 0 
    351 			DUA0  = 0; // 0=> Enables the operation of UART0 
    352 			DUA1  = 1; // 0=> Enables Uart1 
    353 			DI2C1 = 1; // 0=> Enables I2C bus Interface (Slave) 
    354 			DI2C0 = 0; // 0=> Enables I2C bus Interface (Master)	
    355 	
    356 		BLKCON4 = 0x00; // SA-ADC: 0=> Enables ; 0xFF=> Disables
    357 		BLKCON6 = 0x00; // Timers 8, 9, A, E, F : 0=> Enables ; 0xFF=> Disabl
        es
    358 		BLKCON7 = 0x00; // PWM (PWMC, PWMD, PWME, PWMF : 0=> Enables ; 0xFF=>
         Disables
    359 
    360 	// Port Initialize...
    361 		PortA_Low();	//Initialize all 3 Ports of Q111 Port A to GPIO-Low
    362 		PortB_Low();	//Initialize all 8 Ports of Q111 Port B to GPIO-Low
    363 		PortC_Low();	//Initialize all 4 Ports of Q111 Port C to GPIO-Low
    364 
    365 	// UART INIT...	
    366 		//uart_0_Init();

                                                              Page :         11
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    367 				
    368 				
    369 	// ===== Set Oscillator Rate =====
    370      	SetOSC(); 	//8MHz
    371 
    372 	// ===== PWM =========================================================
        =======
    373 	//
    374 	//	NOTE: Possible conflict of B.0 with RX pin from UART0
    375 	//	
    376 	//	PinB0_PWM();		// Set up PWM peripheral (Pin on B.0)
    377 	//====================================================================
        =======	
    378 		
    379 	// ===== Comparator =====	
    380 		//analog_comparator();	//Set up anaolg comparator peripheral
    381 
    382 
    383 /* 	// ===== SET SPECIFIC DESIRED PINS AS INPUTS =====
    384 		//Setup PIR Sensor Input on B.4
    385 			//Step 1: Set Pin Direction...
    386 				PB4DIR = 1;			// PortB Bit4 set Direction to INPUT...
    387 			//Step 2: Set Pin I/O Type...
    388 				PB4C1  = 0;			// PortB Bit4 set Type to HIGH-IMPEDANCE INPUT...
    389 				PB4C0  = 0;	
    390 			//Step 3: Set Pin Purpose...
    391 				PB4MD1  = 0;		// PortB Bit4 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    392 				PB4MD0  = 0;
    393 
    394 		//Setup HALL Sensor Input on B.3
    395 			//Step 1: Set Pin Direction...
    396 				PB3DIR = 1;			// PortB Bit3 set Direction to INPUT...
    397 			//Step 2: Set Pin I/O Type...
    398 				PB3C1  = 0;			// PortB Bit3 set Type to HIGH-IMPEDANCE INPUT...
    399 				PB3C0  = 0;	
    400 			//Step 3: Set Pin Purpose...
    401 				PB3MD1  = 0;		// PortB Bit3 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    402 				PB3MD0  = 0;
    403 
    404 		//Setup ACCELEROMETER X-SIGNAL Sensor Input on A.2
    405 			//Step 1: Set Pin Direction...
    406 				PA2DIR = 1;			// PortA Bit2 set Direction to INPUT...
    407 			//Step 2: Set Pin I/O Type...
    408 				PA2C1  = 0;			// PortA Bit2 set Type to HIGH-IMPEDANCE INPUT...

                                                              Page :         12
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    409 				PA2C0  = 0;	
    410 			//Step 3: Set Pin Purpose...
    411 				PA2MD1  = 0;		// PortA Bit2 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    412 				PA2MD0  = 0;
    413 		
    414 		//Setup ACCELEROMETER Y-SIGNAL Sensor Input on A.1
    415 			//Step 1: Set Pin Direction...
    416 				PA1DIR = 1;			// PortA Bit1 set Direction to INPUT...
    417 			//Step 2: Set Pin I/O Type...
    418 				PA1C1  = 0;			// PortA Bit1 set Type to HIGH-IMPEDANCE INPUT...
    419 				PA1C0  = 0;	
    420 			//Step 3: Set Pin Purpose...
    421 				PA1MD1  = 0;		// PortA Bit1 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    422 				PA1MD0  = 0;
    423 
    424 		//Setup ACCELEROMETER Temperature-SIGNAL Sensor Input on A.0
    425 			//Step 1: Set Pin Direction...
    426 				PA0DIR = 1;			// PortA Bit0 set Direction to INPUT...
    427 			//Step 2: Set Pin I/O Type...
    428 				PA0C1  = 0;			// PortA Bit0 set Type to HIGH-IMPEDANCE INPUT...
    429 				PA0C0  = 0;	
    430 			//Step 3: Set Pin Purpose...
    431 				PA0MD1  = 0;		// PortA Bit0 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    432 				PA0MD0  = 0; */
    433 
    434 	//================== STANDBY CONTROL REGISTER=========================
        ==========
    435 	//
    436 	// SBYCON is a 2-bit special function register to control operating mo
        de of MCU
    437 	//		STP   :   HLT
    438 	// 		BIT 1 :  BIT 0
    439 	//  	 0         0     => Program RUN mode (initial value)
    440 	//  	 0         1     => HALT mode
    441 	//  	 1         0     => STOP mode
    442 	//  	 1         1     => (Prohibited)
    443 	// See ML610Q111/ML610Q112 User Manual - Section 4: MCU Control Functi
        on
    444 	//	SBYCON = 0;		// Program RUN mode
    445 	//====================================================================
        ==========
    446 
    447 	//================== VOLTAGE LEVEL SUPERVISOR REGISTER ===============

                                                              Page :         13
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

        ==========
    448 	// 
    449 	// The Q11x mcu's have two channels of VOLTAGE LEVEL SUPERVISORs
    450 	// Accuracy is ±3%
    451 	//
    452 	// The threshold voltages of VLS0 (VDD fall) : 2.85V (Typ. )
    453 	//								  (VDD rise) : 2.92V (Typ. )
    454 	//
    455 	// The threshold voltages of VLS1 (VDD fall) : 4 types selectable 3.3V
        / 3.6V/ 3.9V/ 4.2V (Typ.)
    456 	// The VLS0 can be used as the low voltage level detector reset.
    457 	// 
    458 	// See ML610Q111/ML610Q112 User Manual - Section 22: Voltage Level Sup
        ervisor
    459 	//
    460 	//====================================================================
        ==========
    461 
    462    	// IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII
    463 	// INTERRUPT SETUP...
    464 		//	The ML610Q1xx mcu's have 31 hardware interrupt sources 
    465 		//		 7 External Interrupt Sources
    466 		//		24 Internal Interrupt Sources 
    467 		// EXAMPLE: WDT; VLS; EXTERNAL INT Pins (6); SPI; ADC; I2C (Slave); I
        2C (Master);
    468 		//			TIMERS (6); UART; Comparators (2); PWM's ((4); TBC (4)		
    469 	
    470 		irq_di();	// Disable Interrupts
    471 		//irq_init();	// Initialize Interrupts (All Off and NO Requests)
    472 			//==================================================================
        ==
    473 			//FOR NOTES ONLY...This is all taken care of in "irq_init()"
    474 				// INTERRUPT ENABLE REGISTERS...
    475 				//  IE0 = VOLTAGE LEVEL SUPERVISOR Int.
    476 				//  IE1 = EXTERNAL Ints on B3, B2, B1, B0, A2, A1, & A0
    477 				//  IE2 = SPI, A/D, I2C Slave & I2C Master Int.
    478 				//  IE3 = TIMERS 8 & 9 Ints.
    479 				//  IE4 = UART & COMPARATOR Ints.
    480 				//  IE5 = TIMERS A, B, E & F Ints.
    481 				//  IE6 = PWMC, PWMD, PWME, PWMF & 128Hz & 32Hz TBC Ints.
    482 				//  IE7 = 16Hz & 2Hz TBC Ints.
    483 				//IE0 = IE1 = IE2 = IE3 = IE4 = IE5 = IE6 = IE7 = 0;
    484 				//--------------------------------------------------------------
    485 				// INTERRUPT REQUEST FLAG REGISTERS...
    486 				//  IRQ0 = WDT & VLS Int Requests
    487 				//  IRQ1 = EXTERNAL Int Requests

                                                              Page :         14
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    488 				//  IRQ2 = SPI, A/D, I2C Slave & I2C Master Int Requests
    489 				//  IRQ3 = TIMERS 8 & 9 Int Requests 
    490 				//  IRQ4 = UART & COMPARATOR Int Requests 
    491 				//  IRQ5 = TIMERS A, B, E & F Int Requests 
    492 				//  IRQ6 = PWMC &  128Hz & 32Hz TBC Int Requests 
    493 				//  IRQ7 = 16Hz & 2Hz TBC Int Requests 
    494 				//IRQ0 = IRQ1 = IRQ2 = IRQ3 = IRQ4 = IRQ5 = IRQ6 = IRQ7 = 0;
    495 			//==================================================================
        ==
    496 
    497 			// INTERRUPT ENABLE REGISTERS...
    498 				IE0 = IE1 = IE2 = IE3 = IE4 = IE5 = IE6 = IE7 = 0;
    499 
    500 
    501 			// INTERRUPT REQUEST REGISTERS...
    502 				IRQ0 = IRQ1 = IRQ2 = IRQ3 = IRQ4 = IRQ5 = IRQ6 = IRQ7 = 0;
    503 
    504  			//------------- SET UP UART Interrupts Handler --------------------
        -----------------------
    505 				(void)irq_setHdr( (unsigned char)IRQ_NO_UA0INT, _intUart );
    506 					EUA0 = 1; 	// EUA0 is the enable flag for the UART0 interrupt (1=E
        NABLED)
***** main\main.c(505) : Warning : W5027 : Meaningless use of an expression
    507 					QUA0 = 0;	// Request Flag for the UART_0 	INTERRUPT (1=REQUEST, 0-
        NO-REQUEST)
    508 			//------------------------------------------------------------------
        ----------------------
    509 			
    510  			//------------- SET UP I2C MASTER Interrupts Handler --------------
        -----------------------
    511 				(void)irq_setHdr( (unsigned char)IRQ_NO_I2CMINT, _intI2c );
    512 					EI2CM = 1; // EI2CM is the enable flag for the I2C MASTER interrup
        t (1=ENABLED)
***** main\main.c(511) : Warning : W5027 : Meaningless use of an expression
    513 					QI2CM = 0;
    514 			//------------------------------------------------------------------
        ----------------------
    515 			
    516 			//------------- SET UP ADC Interrupts Handler ----------------------
        ----------------------
    517 				(void)irq_setHdr( (unsigned char)IRQ_NO_SADINT, _intADC );
    518 					ESAD = 1; // ESAD is the enable flag for the ADC interrupt (1=ENAB
        LED)
***** main\main.c(517) : Warning : W5027 : Meaningless use of an expression
    519 					QSAD = 0; // Request Flag for the ADC INTERRUPT (1=REQUEST, 0-NO-R
        EQUEST)

                                                              Page :         15
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    520 			//------------------------------------------------------------------
        ----------------------
    521 			
    522 			//------------- SET UP  xHz TBC Interrupt (Options: 128Hz, 32Hz, 16H
        z, 2Hz) --------------
    523 				(void)irq_setHdr( (unsigned char)IRQ_NO_T2HINT, TBC_ISR );  //Clear
         interrupt request flag
    524 					E2H = 1;	  // Enable x Hz TBC Interrupt (1=ENABLED)
***** main\main.c(523) : Warning : W5027 : Meaningless use of an expression
    525 					Q2H = 0;	  // Request flag for the TIME BASE COUNTER 2Hz Interrupt
        
    526 			// -----			
    527 			//------------- TBC...Set Ratio: : 1:1 => 1_1 ----------------------
        ----------------------
    528 				(void)tb_setHtbdiv( (unsigned char)TB_HTD_1_1 ); //Set the ratio of
         dividing frequency of the time base counter
    529 			//------------------------------------------------------------------
        ---------------------- 
    530 			
    531  			//------------- SET UP TIMER 8/9 Interrupt to increment timers ever
        y ~X ms ---------------
    532 				(void)irq_setHdr( (unsigned char)IRQ_NO_TM9INT, TMR89_ISR );  //Cle
        ar interrupt request flag
***** main\main.c(528) : Warning : W5027 : Meaningless use of an expression
    533 					ETM8 = 1;	  	// Enable timer 8 Interrupt (1=ENABLED
***** main\main.c(532) : Warning : W5027 : Meaningless use of an expression
    534 					ETM9 = 1;	  	// Enable timer 9 Interrupt (1=ENABLED)
    535 					QTM8 = 0;		// Timer 8 IRQ request flag; 1=REQUEST
    536 					QTM9 = 0;		// Timer 9 IRQ request flag; 1=REQUEST
    537 					T8CS0 = 1;		// 111 => Select PLLCLK
    538 					T8CS1 = 1;
    539 					T8CS2 = 1;
    540 					T9CS0 = 1;		// 111 => Select PLLCLK
    541 					T9CS1 = 1;
    542 					T9CS2 = 1; 
    543 					tm_init(TM_CH_NO_89);
    544 					tm_set89Data(8192);				//A value of 1023 should yield 125us interr
        upts at 8.192 MHz
    545 					tm_set89Source(TM_CS_HTBCLK);
    546 					tm_start89();
    547 					T89M16 = 1;		//1 => sets 16-bit timer mode
    548 				
    549 					HTD3 = 1;	//High-Speed Time Base Counter Divide Register: 1111 = 9
        182kHz
    550 					HTD2 = 1;
    551 					HTD1 = 1;

                                                              Page :         16
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    552 					HTD0 = 1; 
    553 			//------------------------------------------------------------------
        ----------------------
    554 
    555 			
    556  			//------------- SET UP TIMER A/B Interrupt to increment timers ever
        y ~X ms ---------------
    557 				(void)irq_setHdr( (unsigned char)IRQ_NO_TMBINT, TMRAB_ISR );  //Cle
        ar interrupt request flag
    558 					ETMA = 1;	  	// Enable timer 8 Interrupt (1=ENABLED
***** main\main.c(557) : Warning : W5027 : Meaningless use of an expression
    559 					ETMB = 1;	  	// Enable timer 9 Interrupt (1=ENABLED)
    560 					QTMA = 0;		// timer 8 IRQ request flag; 1=REQUEST
    561 					QTMB = 0;		// timer 9 IRQ request flag; 1=REQUEST
    562 					TACS0 = 1;		// 111 => Select PLLCLK
    563 					TACS1 = 1;
    564 					TACS2 = 1;
    565 					TBCS0 = 1;		// 111 => Select PLLCLK
    566 					TBCS1 = 1;
    567 					TBCS2 = 1; 
    568 					tm_init(TM_CH_NO_AB);
    569 					tm_setABData(8192);				//A value of 1023 should yield 125us interr
        upts at 8.192 MHz
    570 					tm_setABSource(TM_CS_HTBCLK);
    571 					tm_startAB();
    572 					TABM16 = 1;		//1 => sets 16-bit timer mode
    573 				
    574 					HTD3 = 1;	//High-Speed Time Base Counter Divide Register: 1111 = 9
        182kHz
    575 					HTD2 = 1;
    576 					HTD1 = 1;
    577 					HTD0 = 1; 
    578 			//------------------------------------------------------------------
        ----------------------
    579 
    580 			
    581 			//------------- SET UP TIMER E/F Interrupt to increment timers every
         ~X ms ---------------
    582 				(void)irq_setHdr( (unsigned char)IRQ_NO_TMFINT, TMREF_ISR );  //Cle
        ar interrupt request flag
    583 					ETME = 1;	  	// Enable timer E Interrupt (1=ENABLED
***** main\main.c(582) : Warning : W5027 : Meaningless use of an expression
    584 					ETMF = 1;	  	// Enable timer F Interrupt (1=ENABLED)
    585 					QTME = 0;		// Timer E IRQ request flag; 1=REQUEST
    586 					QTMF = 0;		// Timer F IRQ request flag; 1=REQUEST
    587 					TECS0 = 1;		// 111 => Select PLLCLK

                                                              Page :         17
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    588 					TECS1 = 1;
    589 					TECS2 = 1;
    590 					TFCS0 = 1;		// 111 => Select PLLCLK
    591 					TFCS1 = 1;
    592 					TFCS2 = 1;
    593 					tm_init(TM_CH_NO_EF);
    594 					tm_setEFData(8192);				//A value of 1023 should yield 125us interr
        upts at 8.192 MHz
    595 					tm_setEFSource(TM_CS_HTBCLK);
    596 					tm_startEF();
    597 					TEFM16 = 1;		//1 => sets 16-bit timer mode
    598 				
    599 					HTD3 = 1;	//High-Speed Time Base Counter Divide Register: 1111 = 9
        182kHz
    600 					HTD2 = 1;
    601 					HTD1 = 1;
    602 					HTD0 = 1; 
    603 			//------------------------------------------------------------------
        ----------------------
    604 			
    605 			//------------- SET UP B.3 as an input, and prepare to use as an ext
        ernal interrupt ------
    606 					PB3DIR = 1;
    607 					PB3C1 = 0;
    608 					PB3C0 = 0;
    609 					PB3MD1 = 0;
    610 					PB3MD0 = 0;
    611 					PB3E1 = 1;
    612 					PB3E0 = 0;		//PBnE0-1 are used to choose the Rising-Edge Mode for 
        this interrupt
    613 					PB3SM = 0;
    614 			// -----
    615 			//------------- SET UP EXTERNAL INTERRUPT on B.3 -------------------
        ----------------------
    616 			//Options include following pins: A.0; A.1; A.2. B.0; B.1; B.2 & B.3
        
    617 			(void)irq_setHdr( (unsigned char)IRQ_NO_PB3INT, ExtInt_ISR );  //Cle
        ar interrupt request flag
    618 					EPB3 = 0;	// 1=> Enables Interrupt
***** main\main.c(617) : Warning : W5027 : Meaningless use of an expression
    619 					QPB3 = 0;	// EXT IRQ request flag; 1=REQUEST	
    620 			//------------------------------------------------------------------
        ----------------------   
    621 	
    622 			
    623 	irq_ei(); // Enable Interrupts

                                                              Page :         18
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    624 	// IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII  
    625 
    626 	// ===== SET UP WATCH DOG TIMER ======================================
        =======
    627 		WDTMOD = 0x03; 	// 0x03=overflow 8sec...
    628 		main_clrWDT(); 	// Clear WDT   
    629 	//====================================================================
        =======
    630 	
    631 	
    632 	// ===== UART Initialization =========================================
        =======
    633 	//
    634 	//	Pin PB0 of mcu => RX  
    635 	// 	Pin PB1 of mcu => TX 
    636 	// 
    637 		(void)uart_init( (unsigned char)UART_CS_HSCLK,	// Generator       			
        	
    638 				 (unsigned short)HSCLK_KHZ,				// HSCLK frequency 				
    639 				 &_uartSetParam );						// Parameters from Structure    
    640 		uart_PortSet();									// Set UART Port Pins
***** main\main.c(639) : Warning : W5027 : Meaningless use of an expression
    641 		_flgUartFin = 0;
    642 		uart_stop();
    643 
    644 	//	
    645 	//====================================================================
        =======
    646 
    647 	// ===== I2C Initialization ==========================================
        =======
    648 	//	(void)i2c_init(I2C_MOD_FST, (unsigned short)HSCLK_KHZ, I2C_SYN_ON);
        
    649 	//	I20SYN = 1;		//Enable Clock Stretching	
    650 	//====================================================================
        =======
    651 
    652 
    653 
    654 		
    655 		
    656 }//End Initialization
    657 //=====================================================================
        ======
    658 
    659 

                                                              Page :         19
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    660 //=====================================================================
        ======
    661 //	OSC set
    662 //=====================================================================
        ======
    663 static void SetOSC(void){
    664 
    665 	//Frequency Control Register 0 (FCON0) 	
    666 	//	used to control the high-speed clock generation circuit and to sele
        ct system clock.
    667 		SYSC0  = 0;			// Used to select the frequency of the HSCLK => 00=8.19
        2MHz.
    668 		SYSC1  = 0;			//...
    669 		OSCM1  = 1;			// 10 => Built-in PLL oscillation mode
    670 		OSCM0  = 0;			//...
    671 		
    672 	// Frequency Control Register 1 (FCON1)
    673 		ENOSC  = 1;			// 1=Enable High Speed Oscillator...
    674 		SYSCLK = 1;			// Select System Clock: 1=HSCLK; 0=LSCLK 
    675 		LPLL   = 1;			// 1=Enables the use of PLL oscillation - ADDED 4/30/20
        13
    676 
    677 	__EI();					//INT enable
    678 }
    679 //=====================================================================
        ======
    680 
    681 
    682 //=====================================================================
        ======
    683 //	Analog Comparator setup
    684 //=====================================================================
        ======
    685 void analog_comparator(void){
    686 
    687 //Carl's Notes...
    688 
    689 //Step 1: Select the Interrupt Mode
    690 // 	a.) Interrupt Disabled      => CMPxE1 = 0; CMPxE0 = 0;	  
    691 // 	b.) Falling-Edge Int. Mode  => CMPxE1 = 0; CMPxE0 = 1;
    692 // 	c.) Rising-Edge Int. Mode   => CMPxE1 = 1; CMPxE0 = 0;
    693 // 	d.) Both-Edge Int. Mode     => CMPxE1 = 1; CMPxE0 = 1;
    694 
    695 
    696 //Step 2: Enable the Comparator                       => CMPxEN = 1;	
    697 

                                                              Page :         20
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    698 //Step 3: Wait 3ms to allow Comparator to stabilize
    699 
    700 //Step 4: Read the comparison result			=> CMPxD: 0= +<-; 1= +>-
    701 
    702 //Step 5: Disable the Comparator				=> CMPxEN = 0;	
    703 
    704 
    705 
    706    //Comparator 0...
    707 	CMP0EN  = 0x01; 	// Comparator ON...
    708 	CMP0E1  = 0x00; 	// No Interupt...
    709 	CMP0E0  = 0x00;
    710 	CMP0SM1 = 0x00; 	// Detect without Sampling... 
    711 	CMP0RFS = 0x01; 	// Differential Input on B5
    712 
    713    //Comparator 0 OFF
    714 	CMP0EN  = 0x00;
    715 
    716 
    717 }
    718 //=====================================================================
        ======
    719 
    720 
    721 
    722 //=====================================================================
        ======
    723 //	Clear All 3 Bits of Port A
    724 //=====================================================================
        ======
    725 void PortA_Low(void){
    726 
    727 //Carl's Notes...
    728 
    729 //Step 1: Set Pin Direction...
    730 //Step 2: Set Pin I/O Type...
    731 //Step 3: Set Pin Purpose...
    732 //Step 4: Set Pin Data...
    733 
    734 	//Direction...	
    735 	PA0DIR = 0;		// PortA Bit0 set to Output Mode...
    736 	PA1DIR = 0;		// PortA Bit1 set to Output Mode...
    737 	PA2DIR = 0;		// PortA Bit2 set to Output Mode...
    738 
    739 	//I/O Type...
    740 	PA0C1  = 1;		// PortA Bit0 set to CMOS Output...

                                                              Page :         21
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    741 	PA0C0  = 1;		
    742 	PA1C1  = 1;		// PortA Bit1 set to CMOS Output...
    743 	PA1C0  = 1;	
    744 	PA2C1  = 1;		// PortA Bit2 set to CMOS Output...
    745 	PA2C0  = 1;	
    746 
    747 	//Purpose...
    748 	PA0MD1  = 0;	// PortA Bit0 set to General Purpose Output...
    749 	PA0MD0  = 0;	
    750 	PA1MD1  = 0;	// PortA Bit1 set to General Purpose Output...
    751 	PA1MD0  = 0;	
    752 	PA2MD1  = 0;	// PortA Bit2 set to General Purpose Output...
    753 	PA2MD0  = 0;	
    754 
    755 	//Data...
    756 	PA0D = 0;		// A.0 Output OFF....
    757 	PA1D = 0;		// A.1 Output OFF....
    758 	PA2D = 0;		// A.2 Output OFF....
    759 
    760 	main_clrWDT(); 	// Clear WDT
    761 
    762 }
    763 //=====================================================================
        ======
    764 
    765 //=====================================================================
        ======
    766 //	Clear All 8 Bits of Port B
    767 //=====================================================================
        ======
    768 void PortB_Low(void){
    769 
    770 //Carl's Notes...
    771 
    772 //Step 1: Set Pin Direction...
    773 //Step 2: Set Pin I/O Type...
    774 //Step 3: Set Pin Purpose...
    775 //Step 4: Set Pin Data...
    776 
    777 	//Direction...	
    778 	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
    779 	PB1DIR = 0;		// PortB Bit1 set to Output Mode...
    780 	PB2DIR = 0;		// PortB Bit2 set to Output Mode...
    781 	PB3DIR = 0;		// PortB Bit3 set to Output Mode...
    782 	PB4DIR = 0;		// PortB Bit4 set to Output Mode...
    783 	PB5DIR = 0;		// PortB Bit5 set to Output Mode...

                                                              Page :         22
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    784 	PB6DIR = 0;		// PortB Bit6 set to Output Mode...
    785 	PB7DIR = 0;		// PortB Bit7 set to Output Mode...
    786 
    787 	//I/O Type...
    788 	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...
    789 	PB0C0  = 1;		
    790 	PB1C1  = 1;		// PortB Bit1 set to CMOS Output...
    791 	PB1C0  = 1;	
    792 	PB2C1  = 1;		// PortB Bit2 set to CMOS Output...
    793 	PB2C0  = 1;	
    794 	PB3C1  = 1;		// PortB Bit3 set to CMOS Output...
    795 	PB3C0  = 1;		
    796 	PB4C1  = 1;		// PortB Bit4 set to CMOS Output...
    797 	PB4C0  = 1;	
    798 	PB5C1  = 1;		// PortB Bit5 set to CMOS Output...
    799 	PB5C0  = 1;	
    800 	PB6C1  = 1;		// PortB Bit6 set to CMOS Output...
    801 	PB6C0  = 1;	
    802 	PB7C1  = 1;		// PortB Bit7 set to CMOS Output...
    803 	PB7C0  = 1;	
    804 
    805 	//Purpose...
    806 	PB0MD1  = 0;	// PortB Bit0 set to General Purpose Output...
    807 	PB0MD0  = 0;	
    808 	PB1MD1  = 0;	// PortB Bit1 set to General Purpose Output...
    809 	PB1MD0  = 0;	
    810 	PB2MD1  = 0;	// PortB Bit2 set to General Purpose Output...
    811 	PB2MD0  = 0;	
    812 	PB3MD1  = 0;	// PortB Bit3 set to General Purpose Output...
    813 	PB3MD0  = 0;	
    814 	PB4MD1  = 0;	// PortB Bit4 set to General Purpose Output...
    815 	PB4MD0  = 0;	
    816 	PB5MD1  = 0;	// PortB Bit5 set to General Purpose Output...
    817 	PB5MD0  = 0;
    818 	PB6MD1  = 0;	// PortB Bit6 set to General Purpose Output...
    819 	PB6MD0  = 0;	
    820 	PB7MD1  = 0;	// PortB Bit7 set to General Purpose Output...
    821 	PB7MD0  = 0;
    822 
    823 	//Data...
    824 	PB0D = 0;		// B.0 Output OFF....
    825 	PB1D = 0;		// B.1 Output OFF....
    826 	PB2D = 0;		// B.2 Output OFF....
    827 	PB3D = 0;		// B.3 Output OFF....
    828 	PB4D = 0;		// B.4 Output OFF....
    829 	PB5D = 0;		// B.5 Output OFF....

                                                              Page :         23
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    830 	PB6D = 0;		// B.6 Output OFF....
    831 	PB7D = 0;		// B.7 Output OFF....
    832 
    833 	main_clrWDT(); 	// Clear WDT
    834 
    835 }
    836 //=====================================================================
        ======
    837 
    838 //=====================================================================
        ======
    839 //	Clear All 4 Bits of Port C
    840 //=====================================================================
        ======
    841 void PortC_Low(void){
    842 
    843 //Carl's Notes...
    844 
    845 //Step 1: Set Pin Direction...
    846 //Step 2: Set Pin I/O Type...
    847 //Step 3: Set Pin Purpose...
    848 //Step 4: Set Pin Data...
    849 
    850 	//Direction...	
    851 	PC0DIR = 0;		// PortC Bit0 set to Output Mode...
    852 	PC1DIR = 0;		// PortC Bit1 set to Output Mode...
    853 	PC2DIR = 0;		// PortC Bit2 set to Output Mode...
    854 	PC3DIR = 0;		// PortC Bit3 set to Output Mode...
    855 
    856 
    857 	//I/O Type...
    858 	PC0C1  = 1;		// PortC Bit0 set to CMOS Output...
    859 	PC0C0  = 1;		
    860 	PC1C1  = 1;		// PortC Bit1 set to CMOS Output...
    861 	PC1C0  = 1;	
    862 	PC2C1  = 1;		// PortC Bit2 set to CMOS Output...
    863 	PC2C0  = 1;	
    864 	PC3C1  = 1;		// PortC Bit3 set to CMOS Output...
    865 	PC3C0  = 1;		
    866 
    867 	//Purpose...
    868 	PC0MD1  = 0;	// PortC Bit0 set to General Purpose Output...
    869 	PC0MD0  = 0;	
    870 	PC1MD1  = 0;	// PortC Bit1 set to General Purpose Output...
    871 	PC1MD0  = 0;	
    872 	PC2MD1  = 0;	// PortC Bit2 set to General Purpose Output...

                                                              Page :         24
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    873 	PC2MD0  = 0;	
    874 	PC3MD1  = 0;	// PortC Bit3 set to General Purpose Output...
    875 	PC3MD0  = 0;	
    876 
    877 	//Data...
    878 	PC0D = 0;		// C.0 Output OFF....
    879 	PC1D = 0;		// C.1 Output OFF....
    880 	PC2D = 0;		// C.2 Output OFF....
    881 	PC3D = 0;		// C.3 Output OFF....
    882 
    883 	main_clrWDT(); 	// Clear WDT
    884 
    885 }
    886 //=====================================================================
        ======
    887 
    888 //=====================================================================
        ======
    889 //	Set All 3 Bits of Port A as Digital Input Pins
    890 //=====================================================================
        ======
    891 void PortA_Digital_Inputs(void){
    892 
    893 //Carl's Notes...
    894 
    895 //Step 1: Set Pin Direction...
    896 //Step 2: Set Pin I/O Type...
    897 //Step 3: Set Pin Purpose...
    898 //Step 4: Set Pin Data...
    899 
    900 	//Direction...	
    901 	PA0DIR = 1;		// PortA Bit0 set to Input Mode...
    902 	PA1DIR = 1;		// PortA Bit1 set to Input Mode...
    903 	PA2DIR = 1;		// PortA Bit2 set to Input Mode...
    904 
    905 
    906 	//I/O Type...
    907 	PA0C1  = 1;		// PortA Bit0 set to Input with Pull-Up Resistor...
    908 	PA0C0  = 0;		
    909 	PA1C1  = 1;		// PortA Bit1 set to Input with Pull-Up Resistor...
    910 	PA1C0  = 0;	
    911 	PA2C1  = 1;		// PortA Bit2 set to Input with Pull-Up Resistor...
    912 	PA2C0  = 0;	
    913 
    914 	//Purpose...
    915 	PA0MD1  = 0;	// PortA Bit0 set to General Purpose I/O...

                                                              Page :         25
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    916 	PA0MD0  = 0;	
    917 	PA1MD1  = 0;	// PortA Bit1 set to General Purpose I/O...
    918 	PA1MD0  = 0;	
    919 	PA2MD1  = 0;	// PortA Bit2 set to General Purpose I/O...
    920 	PA2MD0  = 0;	
    921 
    922 	main_clrWDT(); 	// Clear WDT
    923 
    924 }
    925 //=====================================================================
        ======
    926 
    927 //=====================================================================
        ======
    928 //	PWM Output on Port B - Pin 0
    929 //=====================================================================
        ======
    930 void PWM_B0_ON(int myPeriod, int myDutyCycle){
    931 
    932 		
    933 		//SET THE PERIOD...
    934 			PWCP = myPeriod;		// Init Period to (1=255kHz; 10=46kHz; 50=10kHz; 2
        00=2.5kH; ; 3185 = 160Hz; 3400=150Hz; 4250=120Hz; 5000=102Hz)
    935 
    936 		//PWCD =    10;		//10    ~  0.2 % duty cycle @ 120Hz
    937 		//PWCD =   100;		//100   ~  2.4 % duty cycle @ 120Hz
    938 		//PWCD =  1000;		//1000  ~ 23.5 % duty cycle @ 120Hz
    939 		//PWCD = 4000;		//4000  ~ 94.0 % duty cycle @ 120Hz
    940 		//PWCD = 4150;		//4150  ~ 99.0 % duty cycle @ 120Hz
    941 		//PWCD =    20;		//20    ~  0.4 % duty cycle @ 120Hz	
    942 			PWCD =    myDutyCycle;		//12    ~  0.25% duty cycle @ 160Hz
    943 		
    944 		PCRUN = 1;		// TURN PWM ON
    945 
    946 }//END PWM_B0_ON Function
    947 //=====================================================================
        ======
    948 
    949 
    950 
    951 //=====================================================================
        ======
    952 //	PWM Output on Port B - Pin 0
    953 //=====================================================================
        ======
    954 void PinB0_PWM(void){

                                                              Page :         26
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    955 
    956 //Carl's Notes...
    957 
    958 //Step 1: Set Pin Direction...
    959 //Step 2: Set Pin I/O Type...
    960 //Step 3: Set Pin Purpose...
    961 //Step 4: Select the Clock Mode...
    962 //Step 5: Set the Duty Cycle...
    963 //Step 5: Start the PWM Counter...
    964 
    965 	//Direction...	
    966 	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
    967 
    968 	//I/O Type...
    969 	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...
    970 	PB0C0  = 1;		
    971 
    972 	//Purpose...
    973 	PB0MD1  = 0;	// PortB Bit0 set to PWM Output (0,1)...
    974 	PB0MD0  = 1;	
    975 
    976 
    977 	//Select the Clock Mode...
    978 	PCCS1 = 0;	//00= LS; 01=HS; 10=PLL
    979 	PCCS0 = 1;
    980 
    981 	//SET THE PERIOD...(Added April 4th, 2013)
    982 	PWCP = 4250;		// Init Period to (1=255kHz; 10=46kHz; 50=10kHz; 200=2.5
        kH; ; 3185 = 160Hz; 3400=150Hz; 4250=120Hz; 5000=102Hz)
    983 
    984 	//SET THE DUTY CYCLE...(Added April 15th, 2013)
    985 
    986 	//PWCD =    10;		//10    ~  0.2 % duty cycle @ 120Hz
    987 	//PWCD =   100;		//100   ~  2.4 % duty cycle @ 120Hz
    988 	//PWCD =  1000;		//1000  ~ 23.5 % duty cycle @ 120Hz
    989 	//PWCD = 4000;		//4000  ~ 94.0 % duty cycle @ 120Hz
    990 	//PWCD = 4150;		//4150  ~ 99.0 % duty cycle @ 120Hz
    991 	//PWCD =    20;		//20    ~  0.4 % duty cycle @ 120Hz	
    992 	PWCD =    12;		//12    ~  0.25% duty cycle @ 160Hz
    993 
    994 	PCRUN = 0;		// OFF to start
    995 
    996 }
    997 //=====================================================================
        ======
    998 

                                                              Page :         27
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    999 
   1000 
   1001 
   1002 
   1003 
   1004 
   1005 
   1006 /**********************************************************************
        *********
   1007 	Routine Name:	NOPms
   1008 	Form:			void NOP1000( unsigned int ms )
   1009 	Parameters:		unsigned int sec = "Number of seconds where the device is
         
   1010 						not doing anything"
   1011 	Return value:	void
   1012 	Description:	NOP for x seconds. Uses HTB* clock (512kHz) and 
   1013 					timer A+B (max 0xFFFF)*(HTBCLK = 1/16 * HSCLK 
   1014 					= (1/16)*8192kHz = 512kHz, see HTBDR to change if 
   1015 					we need an even smaller increment timer...)
   1016 					1/(512kHz) * 0xFFFF = 127ms
   1017 					
   1018 ***********************************************************************
        *******/
   1019 /* 
   1020 	void NOPms( unsigned int ms )
   1021 	{
   1022 	unsigned int timerThres;
   1023 	unsigned char TimeFlag;
   1024 	unsigned int TempSec;
   1025 	unsigned int timer;
   1026 	unsigned int timertest;
   1027 
   1028 		TempSec = ms;
   1029 		TimeFlag = 0;
   1030 
   1031 		tm_init(TM_CH_NO_AB);
   1032 		tm_setABSource(TM_CS_HTBCLK);
   1033 		tm_setABData(0xffff);
   1034 
   1035 		if(ms < 128){
   1036 			timerThres = 0x1FF * ms;
   1037 			TimeFlag = 0;
   1038 		}
   1039 		if(ms == 128){
   1040 			timerThres = 0xFFFF;
   1041 			TimeFlag = 0;

                                                              Page :         28
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1042 		}
   1043 		if(ms > 128){
   1044 			while(TempSec > 128){
   1045 				TempSec -= 128;
   1046 				TimeFlag++;
   1047 			}
   1048 			if(TempSec != 0){
   1049 				timerThres = 0x1FF * TempSec;
   1050 			}
   1051 			else{
   1052 				timerThres = 0xFFFF;
   1053 				TimeFlag--;
   1054 			}
   1055 		}
   1056 
   1057 	TimerRestart:
   1058 		main_clrWDT();	
   1059 		//tm_restart89();	//using LSCLK, the maximum delay time we have is ~2
         secs
   1060 		tm_startAB();
   1061 		timer = tm_getABCounter();
   1062 		while(timer < timerThres){
   1063 			timer = tm_getABCounter();
   1064 			timertest = timer;
   1065 		}
   1066 		if(TimeFlag !=0){
   1067 			tm_stopAB();
   1068 			TimeFlag--;
   1069 			timerThres = 0xFFFF;
   1070 			goto TimerRestart;
   1071 		}
   1072 	} //End NOPms 
   1073 */
   1074 
   1075 /**********************************************************************
        *********
   1076 	Routine Name:	_funcUartFin
   1077 	Form:			static void _funcUartFin( unsigned int size, unsigned char err
        Stat )
   1078 	Parameters:		unsigned int size		 : 
   1079 					unsigned char errStat	 : 
   1080 	Return value:	void
   1081 	Description:	UART transmission completion callback function.
   1082 ***********************************************************************
        *******/
   1083 static void _funcUartFin( unsigned int size, unsigned char errStat )

                                                              Page :         29
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1084 {
   1085 	uart_continue();						// Function in UART.c: process to continue send 
        & receive...
   1086 	_flgUartFin = (unsigned char)FLG_SET;
   1087 	main_reqNotHalt();						// uncommented 5/2/2013
   1088 }
   1089 
   1090 /**********************************************************************
        *********
   1091 	Routine Name:	_funcI2CFin
   1092 	Form:			static void _funcUartFin( unsigned int size, unsigned char err
        Stat )
   1093 	Parameters:		unsigned int size		 : 
   1094 					unsigned char errStat	 : 
   1095 	Return value:	void
   1096 	Description:	UART transmission completion callback function.
   1097 ***********************************************************************
        *******/
   1098 static void _funcI2CFin( unsigned int size, unsigned char errStat )
***** main\main.c(1088) : Warning : W5025 : 'errStat': unreferenced formal para
        meter
***** main\main.c(1088) : Warning : W5025 : 'size': unreferenced formal paramet
        er
   1099 {
   1100 	i2c_continue();							// Function in UART.c: process to continue send 
        & receive...
   1101 	_flgI2CFin = (unsigned char)FLG_SET;
   1102 	main_reqNotHalt();						// uncommented 5/2/2013
   1103 }
   1104 
   1105 /**********************************************************************
        *********
   1106 	Routine Name:	_intI2c
   1107 	Form:			static void _intI2c( void )
   1108 	Parameters:		void
   1109 	Return value:	void
   1110 	Description:	I2C handler.
   1111 ***********************************************************************
        *******/
   1112 static void _intI2c( void )
***** main\main.c(1103) : Warning : W5025 : 'errStat': unreferenced formal para
        meter
***** main\main.c(1103) : Warning : W5025 : 'size': unreferenced formal paramet
        er
   1113 {
   1114 	(void)i2c_continue();

                                                              Page :         30
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1115 	main_reqNotHalt();
***** main\main.c(1114) : Warning : W5027 : Meaningless use of an expression
   1116 }
   1117 
   1118 /**********************************************************************
        *********
   1119 	Routine Name:	_intADC
   1120 	Form:			static void _intADC( void )
   1121 	Parameters:		void
   1122 	Return value:	void
   1123 	Description:	I2C handler.
   1124 ***********************************************************************
        *******/
   1125 static void _intADC( void )
   1126 {
   1127 	_flgADCFin = 1;
   1128 }
   1129 
   1130 /**********************************************************************
        *********
   1131 	Routine Name:	main_reqNotHalt
   1132 	Form:			void reqNotHalt( void )
   1133 	Parameters:		void
   1134 	Return value:	void
   1135 	Description:	request not halt.
   1136 ***********************************************************************
        *******/
   1137 void main_reqNotHalt( void )
   1138 {
   1139 	_reqNotHalt = (unsigned char)FLG_SET;
   1140 }
   1141 
   1142 /**********************************************************************
        *********
   1143 	Routine Name:	_intUart
   1144 	Form:			static void _intUart( void )
   1145 	Parameters:		void
   1146 	Return value:	void
   1147 	Description:	UART handler.
   1148 ***********************************************************************
        *******/
   1149 static void _intUart( void )
   1150 {
   1151 	uart_continue(); 	//in UART.c: process to continue send and receive...
        
   1152 }

                                                              Page :         31
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1153 
   1154 
   1155 //=====================================================================
        ======
   1156 //INTERRUPT SERVICE ROUTINE FOR TBC
   1157 static void TBC_ISR( void ) 
   1158 {
   1159 	//Your Code Here...
   1160 	//LED2_pin ^= 1;	// Toggle LED
   1161 	tb_setHtbdiv( (unsigned char)TB_HTD_1_1 ); //Set the ratio of dividing
         frequency of the time base counter
   1162 }
   1163 //=====================================================================
        ======
   1164 
   1165 //=====================================================================
        ======
   1166 //INTERRUPT SERVICE ROUTINE FOR Timer8/9
   1167 static void TMR89_ISR( void ) 
   1168 {
   1169 	//Your Code Here...
   1170 	//LED1_pin ^= 1;
   1171 	tm_init(TM_CH_NO_89);
   1172 	tm_start89();		//Clear & Restart Timer...
   1173 }
   1174 //=====================================================================
        ======
   1175 
   1176 //=====================================================================
        ======
   1177 //INTERRUPT SERVICE ROUTINE FOR TimerA/B
   1178 static void TMRAB_ISR( void ) 
   1179 {
   1180 	//Your Code Here...
   1181 	//LED4_pin ^= 1;
   1182 	tm_init(TM_CH_NO_AB);
   1183 	tm_startAB();		//Clear & Restart Timer...
   1184 }
   1185 //=====================================================================
        ======
   1186 
   1187 //=====================================================================
        ======
   1188 //INTERRUPT SERVICE ROUTINE FOR TimerE/F
   1189 static void TMREF_ISR( void ) 
   1190 {

                                                              Page :         32
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1191 	//Your Code Here...
   1192 	//LED7_pin ^= 1;
   1193 	tm_init(TM_CH_NO_EF);
   1194 	tm_startEF();		//Clear & Restart Timer...
   1195 }
   1196 //=====================================================================
        ======
   1197 
   1198 
   1199 //=====================================================================
        ======
   1200 // ----- ISR for External Interrupt Pin 
   1201 static void ExtInt_ISR( void ) 
   1202 {
   1203 	//Your Code Here...
   1204 	//LED9_pin ^= 1;
   1205 	
   1206 }
   1207 //=====================================================================
        ======
   1208 
   1209 //=====================================================================
        ======
   1210 void NOPx( unsigned int MyCount )
   1211 {
   1212 unsigned int ONCNT = 0;
   1213 unsigned int xxx;
   1214 
   1215 xxx = MyCount;
   1216 
   1217 	while(ONCNT < xxx) {	// NOP for "xxx" Cycles
   1218 		ONCNT++;
   1219 	}
   1220 	ONCNT = 0;			// Reset Counter 
   1221 }
   1222 //=====================================================================
        ======
   1223 
   1224 
   1225 
   1226 
   1227 
   1228 
   1229 
   1230 
   1231 

                                                              Page :         33
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1232 
   1233 
   1234 
   1235 //=====================================================================
        ======
   1236 //Simple function to demonstrate Serial LCD
   1237 void UART_TX_TEST (void)
   1238 {
   1239 	// ===== START UART TX TEST... =====
   1240 		unsigned char UARTStartupMessage[26] = {"ML610Q111 UART - TX Demo: "}
        ;
   1241 		
   1242 		//CLEAR Parallax LCD Display!
   1243 		_flgUartFin = 0;
   1244 		uart_stop();
   1245 		uart_startSend(UARTStartupMessage, 26, _funcUartFin);
   1246 		while(_flgUartFin != 1){
   1247 			main_clrWDT(); 
   1248 		}
   1249 			
   1250 	// ===== END UART TX TEST =====  
   1251 	
   1252 
   1253 }
   1254 //=====================================================================
        ======
   1255 
   1256 //=====================================================================
        ======
   1257 void UART_RX_TEST(void){
   1258 
   1259 	unsigned char	MyRx[1];	//Small Array...for UART Receive, etc
   1260 	int i;
   1261  	
   1262 	// CLEAR the Array...
   1263 		for(i = 0; i<1; i++) 
   1264 		{
   1265 			MyRx[i] = 0x20;	// 0x20 = "Space" => Clear Array
   1266 		} 
   1267 	 
   1268 	
   1269 	// ===== START UART RX TEST... =====
   1270 		_flgUartFin = 0;
   1271 		uart_stop();
   1272 		uart_startReceive(MyRx, 1, _funcUartFin);	// RX!
   1273 		while(_flgUartFin != 1){

                                                              Page :         34
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1274 			main_clrWDT();	
   1275 			//LED5_pin ^= 1;	//waiting for data...
   1276 		}
   1277 		
   1278  		//If data in RX Buffer...echo it out the TX port
   1279 		if(MyRx[0] != 0x20){			
   1280 			//Echo the Received Data
   1281 			_flgUartFin = 0;
   1282 			uart_stop();
   1283 			uart_startSend(MyRx, 1, _funcUartFin);	// TX!
   1284 			while(_flgUartFin != 1){
   1285 				main_clrWDT(); 
   1286 			}
   1287 		} 
   1288 	// ===== END UART RX TEST =====
   1289 		
   1290 }
   1291 //=====================================================================
        ======
   1292 
   1293 //=====================================================================
        ======
   1294 void Jerrys_Function(void){
   1295 	int i;
   1296 
   1297 		
   1298 }
   1299 //=====================================================================
        ======
   1300  	
   1301 
   1302 ***** main\main.c(1298) : Warning : W5029 : 'i': unreferenced local variable
***** main\main.c(1302) : Warning : W5030 : 'tm_get89Counter': unreferenced sta
        tic function
***** main\main.c(1302) : Warning : W5030 : 'tm_getEFSource': unreferenced stat
        ic function
***** main\main.c(1302) : Warning : W5030 : 'tm_getABSource': unreferenced stat
        ic function
***** main\main.c(1302) : Warning : W5030 : 'tm_get89Source': unreferenced stat
        ic function
***** main\main.c(1302) : Warning : W5030 : 'tm_restartAB': unreferenced static
         function
***** main\main.c(1302) : Warning : W5030 : 'tm_clrABCounter': unreferenced sta
        tic function
***** main\main.c(1302) : Warning : W5030 : 'tm_restartEF': unreferenced static

                                                              Page :         35
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

         function
***** main\main.c(1302) : Warning : W5030 : 'tm_clrEFCounter': unreferenced sta
        tic function
***** main\main.c(1302) : Warning : W5030 : 'tm_getABCounter': unreferenced sta
        tic function
***** main\main.c(1302) : Warning : W5030 : 'tm_getEFCounter': unreferenced sta
        tic function
***** main\main.c(1302) : Warning : W5030 : 'tm_stop89': unreferenced static fu
        nction
***** main\main.c(1302) : Warning : W5030 : 'tm_stopEF': unreferenced static fu
        nction
***** main\main.c(1302) : Warning : W5030 : 'tm_stopAB': unreferenced static fu
        nction
***** main\main.c(1302) : Warning : W5030 : 'tm_setAOneshot': unreferenced stat
        ic function
***** main\main.c(1302) : Warning : W5030 : 'tm_setBOneshot': unreferenced stat
        ic function
***** main\main.c(1302) : Warning : W5030 : 'tm_set9Oneshot': unreferenced stat
        ic function
***** main\main.c(1302) : Warning : W5030 : 'tm_set8Oneshot': unreferenced stat
        ic function
***** main\main.c(1302) : Warning : W5030 : '_funcI2CFin': unreferenced static 
        function
***** main\main.c(1302) : Warning : W5030 : 'tm_clr89Counter': unreferenced sta
        tic function
***** main\main.c(1302) : Warning : W5030 : 'tm_restart89': unreferenced static
         function



Error(s)     :  0
Warning(s)   :  50



                                                              Page :         36
                                                              Date : 07-24-2014
                                                              Time :   15:12:10
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c



                            STACK INFORMATION
                            -----------------

  FUNCTION                         LOCALS    CONTEXT    OTHERS    TOTAL
  --------                         ------    -------    ------    -----
  _main                            0         0          0         0         
  _main_clrWDT                     0         0          0         0         
  _Initialization                  0         2          2         4         
  _SetOSC                          0         0          0         0         
  _analog_comparator               0         0          0         0         
  _PortA_Low                       0         0          0         0         
  _PortB_Low                       0         0          0         0         
  _PortC_Low                       0         0          0         0         
  _PortA_Digital_Inputs            0         0          0         0         
  _PWM_B0_ON                       0         0          0         0         
  _PinB0_PWM                       0         0          0         0         
  __funcUartFin                    0         2          0         2         
  __funcI2CFin                     0         2          0         2         
  __intI2c                         0         2          0         2         
  __intADC                         0         0          0         0         
  _main_reqNotHalt                 0         0          0         0         
  __intUart                        0         0          0         0         
  _TBC_ISR                         0         0          0         0         
  _TMR89_ISR                       0         2          0         2         
  _TMRAB_ISR                       0         2          0         2         
  _TMREF_ISR                       0         2          0         2         
  _ExtInt_ISR                      0         0          0         0         
  _NOPx                            4         4          0         8         
  _UART_TX_TEST                    26        4          2         32        
  _UART_RX_TEST                    2         4          2         8         
  _Jerrys_Function                 0         0          0         0         
